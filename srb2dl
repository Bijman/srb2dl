#!/bin/sh

if [ "$SRB2DLDEBUG" = 1 ]; then

    set -x

fi

# Set environment variables.
if [ "$(uname)" = "Darwin" ]; then

    PRINTF="printf"

else

    PRINTF=$(which -a printf | gawk '/bin/ {print}' | head -n1)

fi

# Set environment variables.
FAILURE="\e[1;91m"
SUCCESS="\e[1;92m"
NOTICE="\e[1;93m"
MESSAGE="\e[1;94m"
PROMPT="\e[1;97m"

if [ "$OS" = "Darwin" ]; then

    SRB2DLROOT="$HOME/Library"

elif [ "$(printf "%s\n" "$OS" | gawk -F'_' '{print $1}')" = "MINGW64" ] || [ "$(printf "%s\n" "$OS" | gawk -F'_' '{print $1}')" = "MINGW" ]; then

    SRB2DLROOT="$HOME/AppData/Roaming"

else

    SRB2DLROOT="$HOME/.local/share"

fi

checksrb2mb() {
    # Check connection to SRB2 Message Board.
    if [ -z "$(printf "%s\n" "$MBCODE" | gawk 'match($0, /user|ratingStars/) {print substr($0, RSTART, RLENGTH)}' | head -n1)" ] && [ -z "$(printf "%s\n" "$MBCODE" | gawk 'match($0, /'$SEARCHCOOKIES'|'$THREADNAME'/) {print substr($0, RSTART, RLENGTH)}' | head -n1)" ]; then

        clear
        $PRINTF "$FAILURE\n%s\n\e[0m" "ERROR: Can't connect to SRB2 Message Board. Try again later or check your internet connection."
        exit

    fi
}

choosepage() {
    # Display page of chosen category.
    NEXT="\033[1m\033[34mNext Page $((PAGE + 1))\033[0m"
    PREV="\033[1m\033[34mPrevious Page $((PAGE - 1))\033[0m"
    BACK2CAT="\033[1m\033[34mBack to categories\033[0m"
    BACK2ADDON="\033[1m\033[34mBack to addons\033[0m"
    BACK2SEARCHRESULT="\033[1m\033[34mBack to search results\033[0m"
    BACK2SEARCH="\033[1m\033[34mBack to search\033[0m"
    BACK2HISTORY="\033[1m\033[34mBack to history\033[0m"
    GOTOHISTORY="\033[1m\033[34mHistory\033[0m"
    DONE="\033[1m\033[34mDone\033[0m"

    if [ -z "$arrayfile" ] && [ -z "$arrayfilename" ] && [ "$SEARCH" != 1 ]; then

        if [ "$REUSABLE" = 1 ]; then

            PAGECODE=$(curl -s "$CATURL=$PAGE&prefix_id=1")

        else

            PAGECODE=$(curl -s "$CATURL=$PAGE")

        fi

    fi

    # Variables to show information like star rating, author, resource's title, etc.
    STARNUMS=$(printf "%s\n" "$PAGECODE" | gawk -F'title="|">|star' '/ratingStars--larger/ {print $2}')
    STARS=$(for i in $STARNUMS; do
        if [ "${i%%.*}" = 0 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^0.[0-9]*$/,"☆ ☆ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 1 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^1.[0-9]*$/,"★ ☆ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 2 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^2.[0-9]*$/,"★ ★ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 3 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^3.[0-9]*$/,"★ ★ ★ ☆ ☆")'

        elif [ "${i%%.*}" = 4 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^4.[0-9]*$/,"★ ★ ★ ★ ☆")'

        elif [ "${i%%.*}" = 5 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^5.[0-9]*$/,"★ ★ ★ ★ ★")'

        elif [ "${i%%.*}" = 0 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^0.[0-9]*$/,"⯪ ☆ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 1 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^1.[0-9]*$/,"★ ⯪ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 2 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^2.[0-9]*$/,"★ ★ ⯪ ☆ ☆")'

        elif [ "${i%%.*}" = 3 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^3.[0-9]*$/,"★ ★ ★ ⯪ ☆")'

        elif [ "${i%%.*}" = 4 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^4.[0-9]*$/,"★ ★ ★ ★ ⯪")'

        fi

    done)

    TAGLINES=$(printf "%s\n" "$PAGECODE" | gawk -F'<div class="structItem-resourceTagLine">|</div>' '/<div class="structItem-resourceTagLine">/ {gsub("&#039;","\47") || gsub("&amp;","\\&") || gsub("&quot;","\"") || gsub("^.$",""); print $2}')
    USERS=$(printf "%s\n" "$PAGECODE" | gawk -F'data-author="|">' '/data-author="/ {gsub("&#039;","\47") || gsub("&amp;","\\&") || gsub("&quot;","\"") || gsub("^.$",""); print $2}')
    DATE=$(printf "%s\n" "$PAGECODE" | gawk -F'class="u-concealed"><time  class="u-dt" dir="auto" datetime="*.*" data-time="*.*" data-date-string="*.*" data-time-string="*.*" title="*.*">|</time></a></dd>' '/class="u-concealed"><time  class="u-dt" dir="auto" datetime="*.*" data-time="*.*" data-date-string="*.*" data-time-string="*.*" title="*.*">/ {print $2}')

    if [ "$SEARCH" = 1 ]; then

        if [ -z "$arrayfile" ] && [ -z "$arrayfilename" ]; then

            if [ -n "$SEARCHQUERYUSER" ]; then

                PAGECODE=$(curl -s "$SEARCHURL")

            else

                PAGECODE=$(curl -s "$SEARCHURL&page=$PAGE")

            fi

        fi

        USERS=$(printf "%s\n" "$PAGECODE" | gawk -F'data-author="|"' '/data-author=/ {print $4}' | gawk '{gsub("&#039;","\47") || gsub("&amp;","\\&") || gsub("&quot;","\"") || gsub("^.$",""); print}')
        CATEGORIES=$(printf "%s\n" "$PAGECODE" | gawk -F'<li>Category: <a href="/addons/categories/*.*">|</a></li>' '/<li>Category: <a href="\/addons\/categories/ {print $2}')
        DATE=$(printf "%s\n" "$PAGECODE" | gawk -F'<li><time  class="*.*">|</time></li>' '/<li><time  class=/ {print $2}')

        arraypagesearch=$(printf "%s\n" "$PAGECODE" | gawk -F'<a href="|</a>' '/addons/ {split($2,a,"\""); print a[1]}' | gawk -F'/' '!/\/addons\/$|latest-reviews|categories/ && NF {print $3}')

        arraypagesearchnametmp=$(printf "%s\n" "$PAGECODE" | gawk -F'">|</a>|<span class="label label--primary" dir="auto|&nbsp;</span>|<em class="textHighlight|</span><span class="label-append|</em>' '/\/addons\// && !/categories|https/ {for (i = 2; i <= NF; i++) printf "\033[1m"$i"\033[0m"; print ""}' | gawk '{for (i = 1 ; i <= NF ; i++) {gsub("&#039;","\47"); gsub("&amp;","\\&"); gsub("&quot;","\""); gsub("^.$","")}}1' | gawk 'NF {gsub(/\[Open Assets\]/,"\033[34;7m[Open Assets]\033[0m "); print "\033[1m"$0"\033[0m"}')

        arraypagesearchname=$(printf "%s\n" "$(
            gawk -v left="$arraypagesearchnametmp" -v leftcenter="$USERS" -v rightcenter="$DATE" -v right="$CATEGORIES" 'BEGIN{
split(left,l,/\n/)
split(leftcenter,lc,/\n/)
split(rightcenter,rc,/\n/)
split(right,r,/\n/)
for (i = 1; i in l; i++)
{print l[i] " - " "\033[37mUser: "lc[i]"\033[0m" " - " "\033[2mUpdated: "rc[i]"\033[0m" " - " "\033[2mCategory: "r[i]"\033[0m"}}'
        )")

        if [ -z "$arraypagesearch" ]; then

            arraypage=$(printf "Back2Search\nDone")
            arraypagename=$(printf "$BACK2SEARCH\n$DONE")

        else

            arraypage=$(printf "%s\nPrev\nNext\nBack2Search\nDone" "$arraypagesearch")
            arraypagename=$(printf "%s\n$PREV\n$NEXT\n$BACK2SEARCH\n$DONE" "$arraypagesearchname")

        fi

    elif [ "$BUILD" = 1 ]; then

        arraypage=$(printf "SRB2\nSRB2NetPlus\nSRB2rphys\nSRB2TSoURDt3rd\nSRB2VR\nSRB2Persona\nSRB2Android\nSRB2Switch\nSRB2-2.1\nSRB2-2.1-Legacy\nSRB2-2.1-MegaDrive\nSRB2Archive\n%s\nPrev\nNext\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F'"|/updates|/addons/' '/<dd>/ {print $3}' | gawk 'NF{print}')")

        arraypagenametmp=$(printf "%s\n" "$PAGECODE" | gawk -F'<a href=".*" class="" data-tp-primary="on">|<a href=".*" class="labelLink" data-xf-init="tooltip" title=".*"  rel="nofollow"><span class="label label--primary" dir="auto">|</a>|</span></a>' '/<a href=".*" class="" data-tp-primary="on">/ || /<a href=".*" class="labelLink" data-xf-init="tooltip" title=".*"  rel="nofollow"><span class="label label--primary" dir="auto">/ {gsub("&#039;","\47"); gsub("&amp;","\\&"); gsub("&quot;","\""); gsub("^.$",""); print "\033[1m"$2"\033[0m"}' | gawk '/\[Open Assets\]/ {getline t; print "\033[7;34m"$0"\033[0m",t; next}1')

        arraypagename=$(printf "\033[1mSRB2\033[0m\n\033[1mSRB2 - NetPlus\033[0m\n\033[1mSRB2 - rphys\033[0m\n\033[1mSRB2 - TSoURDt3rd\033[0m\n\033[1mSRB2 - VR\033[0m\n\033[1mSRB2 - Persona\033[0m\n\033[1mSRB2 - Android Port\033[0m\n\033[1mSRB2 - Switch Port\033[0m\n\033[1mSRB2 2.1\033[0m\n\033[1mSRB2 2.1 - Legacy\033[0m\n\033[1mSRB2 2.1 - SEGA Genesis/Mega Drive Port\033[0m\n\033[1mSRB/SRB2 - Archived Versions\033[0m\n%s\n$PREV\n$NEXT\n$BACK2CAT\n$DONE" "$(
            gawk -v left="$arraypagenametmp" -v leftcenter="$TAGLINES" -v rightcenter="$USERS" -v right="$STARS" 'BEGIN{
split(left,l,/\n/)
split(leftcenter,lc,/\n/)
split(rightcenter,rc,/\n/)
split(right,r,/\n/)
for (i = 1; i in l; i++)
{print l[i] " - " "\033[2m"lc[i]"\033[0m" " - " "\033[37mUser: "rc[i]"\033[0m" " - " "\033[1;33m"r[i]"\033[0m"}}'
        )")

    elif [ "$KARTBUILD" = 1 ]; then

        arraypage=$(printf "SRB2Kart\nSRB2KartGalaxy\nSRB2KartHEP\nSRB2KartSaturn\nSRB2KartVR\nSRB2KartSwitch\n%s\nPrev\nNext\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F'"|/updates|/addons/' '/<dd>/ {print $3}' | gawk 'NF{print}')")

        arraypagenametmp=$(printf "%s\n" "$PAGECODE" | gawk -F'<a href=".*" class="" data-tp-primary="on">|<a href=".*" class="labelLink" data-xf-init="tooltip" title=".*"  rel="nofollow"><span class="label label--primary" dir="auto">|</a>|</span></a>' '/<a href=".*" class="" data-tp-primary="on">/ || /<a href=".*" class="labelLink" data-xf-init="tooltip" title=".*"  rel="nofollow"><span class="label label--primary" dir="auto">/ {gsub("&#039;","\47"); gsub("&amp;","\\&"); gsub("&quot;","\""); gsub("^.$",""); print "\033[1m"$2"\033[0m"}' | gawk '/\[Open Assets\]/ {getline t; print "\033[7;34m"$0"\033[0m",t; next}1')

        arraypagename=$(printf "\033[1mSRB2Kart\033[0m\n\033[1mSRB2Kart - Galaxy\033[0m\n\033[1mSRB2Kart - HEP\033[0m\n\033[1mSRB2Kart - Saturn\033[0m\n\033[1mSRB2Kart - VR\033[0m\n\033[1mSRB2Kart - Switch Port\033[0m\n%s\n$PREV\n$NEXT\n$BACK2CAT\n$DONE" "$(
            gawk -v left="$arraypagenametmp" -v leftcenter="$TAGLINES" -v rightcenter="$USERS" -v right="$STARS" 'BEGIN{
split(left,l,/\n/)
split(leftcenter,lc,/\n/)
split(rightcenter,rc,/\n/)
split(right,r,/\n/)
for (i = 1; i in l; i++)
{print l[i] " - " "\033[2m"lc[i]"\033[0m" " - " "\033[37mUser: "rc[i]"\033[0m" " - " "\033[1;33m"r[i]"\033[0m"}}'
        )")

    else

        arraypage=$(printf "%s\nPrev\nNext\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F'"|/updates|/addons/' '/<dd>/ {print $3}' | gawk 'NF{print}')")

        arraypagenametmp=$(printf "%s\n" "$PAGECODE" | gawk -F'<a href=".*" class="" data-tp-primary="on">|<a href=".*" class="labelLink" data-xf-init="tooltip" title=".*"  rel="nofollow"><span class="label label--primary" dir="auto">|</a>|</span></a>' '/<a href=".*" class="" data-tp-primary="on">/ || /<a href=".*" class="labelLink" data-xf-init="tooltip" title=".*"  rel="nofollow"><span class="label label--primary" dir="auto">/ {gsub("&#039;","\47"); gsub("&amp;","\\&"); gsub("&quot;","\""); gsub("^.$",""); print "\033[1m"$2"\033[0m"}' | gawk '/\[Open Assets\]/ {getline t; print "\033[7;34m"$0"\033[0m",t; next}1')
        arraypagename=$(printf "%s\n$PREV\n$NEXT\n$BACK2CAT\n$DONE" "$(
            gawk -v left="$arraypagenametmp" -v leftcenter="$TAGLINES" -v center="$USERS" -v rightcenter="$DATE" -v right="$STARS" 'BEGIN{
split(left,l,/\n/)
split(leftcenter,lc,/\n/)
split(center,c,/\n/)
split(rightcenter,rc,/\n/)
split(right,r,/\n/)
for (i = 1; i in l; i++)
{print l[i] " - " "\033[2m"lc[i]"\033[0m" " - " "\033[37mUser: "c[i]"\033[0m" " - " "\033[0m\033[37mUpdated: "rc[i]"\033[0m" " - " "\033[1;33m"r[i]"\033[0m"}}'
        )")

    fi

    if [ "$FILES" = 0 ]; then

        count="$(printf "%s\n" "$arraypage" | wc -l)"
        n=""

        if [ "$SEARCH" != 1 ]; then

            MBCODE="$PAGECODE"
            checksrb2mb

        fi

        clear
        $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose resource by typing number and then pressing enter. Press enter or ctrl+c to quit."
        $PRINTF "%s\n" "$arraypagename" | gawk '{print NR")", $0}'
        while true; do

            $PRINTF "$PROMPT%s\e[0m" "#? "
            read -r n

            if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                export OPTURL=$(printf "%s\n" "$arraypage" | gawk 'NR=='"${n}"'')
                break

            else

                $PRINTF "$NOTICE\n%s\n\e[0m" "No resource has been chosen."
                exit

            fi

        done

        choosefile

    elif [ "$FILES" = 1 ]; then

        choosefile

    fi
}

choosefile() {
    # Choose file selected from addon's page.
    if [ "$OPTURL" != "Next" ] && [ "$OPTURL" != "Prev" ] && [ "$OPTURL" != "Back2Cat" ] && [ "$OPTURL" != "Back2Addon" ] && [ "$OPTURL" != "Back2History" ] && [ "$OPTURL" != "Back2Search" ] && [ "$OPTURL" != "Back2SearchResult" ] && [ "$OPTURL" != "Done" ]; then

        clear

        if [ "$SRB2DLPREVIEW" = 1 ]; then

            if [ -n "$BROWSER" ] && [ "$FILES" = 0 ] && [ "$OPTURL" != "SRB2" ] && [ "$OPTURL" != "SRB2NetPlus" ] && [ "$OPTURL" != "SRB2rphys" ] && [ "$OPTURL" != "SRB2TSoURDt3rd" ] && [ "$OPTURL" != "SRB2VR" ] && [ "$OPTURL" != "SRB2Persona" ] && [ "$OPTURL" != "SRB2Android" ] && [ "$OPTURL" != "SRB2Switch" ] && [ "$OPTURL" != "SRB2-2.1" ] && [ "$OPTURL" != "SRB2-2.1-Legacy" ] && [ "$OPTURL" != "SRB2-2.1-MegaDrive" ] && [ "$OPTURL" != "SRB2Archive" ] && [ "$OPTURL" != "SRB2Kart" ] && [ "$OPTURL" != "SRB2KartGalaxy" ] && [ "$OPTURL" != "SRB2KartHEP" ] && [ "$OPTURL" != "SRB2KartSaturn" ] && [ "$OPTURL" != "SRB2KartVR" ] && [ "$OPTURL" != "SRB2KartSwitch" ]; then

                $PRINTF "$MESSAGE%s\n\n\e[0m" "Opening link to files. Please wait.."
                $BROWSER "https://mb.srb2.org/addons/$OPTURL" > /dev/null &

            elif [ -x "/usr/bin/w3m" ] && [ "$FILES" = 0 ] && [ "$OPTURL" != "SRB2" ] && [ "$OPTURL" != "SRB2NetPlus" ] && [ "$OPTURL" != "SRB2rphys" ] && [ "$OPTURL" != "SRB2TSoURDt3rd" ] && [ "$OPTURL" != "SRB2VR" ] && [ "$OPTURL" != "SRB2Persona" ] && [ "$OPTURL" != "SRB2Android" ] && [ "$OPTURL" != "SRB2Switch" ] && [ "$OPTURL" != "SRB2-2.1" ] && [ "$OPTURL" != "SRB2-2.1-Legacy" ] && [ "$OPTURL" != "SRB2-2.1-MegaDrive" ] && [ "$OPTURL" != "SRB2Archive" ] && [ "$OPTURL" != "SRB2Kart" ] && [ "$OPTURL" != "SRB2KartGalaxy" ] && [ "$OPTURL" != "SRB2KartHEP" ] && [ "$OPTURL" != "SRB2KartSaturn" ] && [ "$OPTURL" != "SRB2KartVR" ] && [ "$OPTURL" != "SRB2KartSwitch" ]; then

                w3m "https://mb.srb2.org/addons/$OPTURL"

            fi

        fi

        $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose file by typing number and then pressing enter. Press enter or ctrl+c to quit."

        if [ -z "$arrayfile" ] && [ -z "$arrayfilename" ]; then

            if [ "$OPTURL" != "SRB2" ] && [ "$OPTURL" != "SRB2NetPlus" ] && [ "$OPTURL" != "SRB2rphys" ] && [ "$OPTURL" != "SRB2TSoURDt3rd" ] && [ "$OPTURL" != "SRB2VR" ] && [ "$OPTURL" != "SRB2Persona" ] && [ "$OPTURL" != "SRB2Android" ] && [ "$OPTURL" != "SRB2Switch" ] && [ "$OPTURL" != "SRB2-2.1" ] && [ "$OPTURL" != "SRB2-2.1-Legacy" ] && [ "$OPTURL" != "SRB2-2.1-MegaDrive" ] && [ "$OPTURL" != "SRB2Archive" ] && [ "$OPTURL" != "SRB2Kart" ] && [ "$OPTURL" != "SRB2KartGalaxy" ] && [ "$OPTURL" != "SRB2KartHEP" ] && [ "$OPTURL" != "SRB2KartSaturn" ] && [ "$OPTURL" != "SRB2KartVR" ] && [ "$OPTURL" != "SRB2KartSwitch" ]; then

                OPTURLTHREAD=$(curl -s "https://mb.srb2.org/addons/$OPTURL/" | gawk -F'/|"|\\\' '/discussionUrl/ {print $12}')
                DOWNLOADHEADER=$(curl -Is "https://mb.srb2.org/addons/$OPTURL/download/" | gawk -F'"' '/filename/ {print $2}')
                ATTACHMENTCODE=$(curl -s "https://mb.srb2.org/threads/$OPTURLTHREAD/")

                if [ -z "$DOWNLOADHEADER" ]; then

                    LATESTCODE=$(curl -s "https://mb.srb2.org/addons/$OPTURL/download/")
                    LATEST=$(printf "%s\n" "$LATESTCODE" | gawk -F'a href="|" class' '/version/ {print $2}' | gawk 'NF{print}')
                    LATESTNAME=$(printf "%s\n" "$LATESTCODE" | gawk -F'<h3 class="contentRow-title">|</h3>' '(/.zip/ || /.7z/ || /.rar/ || /.pk3/ || /.wad/ || /.lua/ || /.exe/ || /.soc/ || /.ZIP/ || /.7Z/ || /.RAR/ || /.PK3/ || /.WAD/ || /.LUA/ || /.EXE/ || /.SOC/) {print $2}' | gawk 'NF{gsub("&#039;","\47") || gsub("&amp;","\\&") || gsub("&quot;","\"") || gsub("^.$",""); print}')

                else

                    LATEST="addons/$OPTURL/download"
                    LATESTNAME="$DOWNLOADHEADER"

                fi

                MBCODE="$ATTACHMENTCODE"
                checksrb2mb

            fi

            arrayattachment=$(printf "%s\n" "$ATTACHMENTCODE" | gawk -F'href="|"' '/attachments/ && (/.zip/ || /.7z/ || /.rar/ || /.pk3/ || /.wad/ || /.lua/ || /.exe/ || /.soc/ || /.ZIP/ || /.7Z/ || /.RAR/ || /.PK3/ || /.WAD/ || /.LUA/ || /.EXE/ || /.SOC/) && NF {print $4}' | gawk -F'/' '{print $2"/"$3}' | gawk '!/^\/$/ {print}')
            arrayattachmentname=$(printf "%s\n" "$ATTACHMENTCODE" | gawk -F'">|</span>' '/title/ {split($2,a,"<"); print a[1]}' | gawk '(/.zip/ || /.7z/ || /.rar/ || /.pk3/ || /.wad/ || /.lua/ || /.exe/ || /.soc/ || /.ZIP/ || /.7Z/ || /.RAR/ || /.PK3/ || /.WAD/ || /.LUA/ || /.EXE/ || /.SOC/) && NF {gsub("&#039;","\47"); gsub("&amp;","\\&"); gsub("&quot;","\""); gsub("^.$",""); print}')

            if [ "$SEARCH" = 1 ]; then

                if [ -z "$LATEST" ] && [ -z "$arrayattachment" ]; then

                    arrayfile=$(printf "Back2SearchResult\nBack2Search\nHistory\nDone")
                    arrayfilename=$(printf "$BACK2SEARCHRESULT\n$BACK2SEARCH\n$GOTOHISTORY\n$DONE")

                elif [ -z "$LATEST" ]; then

                    arrayfile=$(printf "%s\nBack2SearchResult\nBack2Search\nHistory\nDone" "$arrayattachment")
                    arrayfilename=$(printf "%s\n$BACK2SEARCHRESULT\n$BACK2SEARCH\n$GOTOHISTORY\n$DONE" "$arrayattachmentname")

                elif [ -z "$arrayattachment" ]; then

                    arrayfile=$(printf "$LATEST\nBack2SearchResult\nBack2Search\nHistory\nDone")
                    arrayfilename=$(printf "$LATESTNAME\n$BACK2SEARCHRESULT\n$BACK2SEARCH\n$GOTOHISTORY\n$DONE")

                else

                    arrayfile=$(printf "$LATEST\n%s\nBack2SearchResult\nBack2Search\nHistory\nDone" "$arrayattachment")
                    arrayfilename=$(printf "$LATESTNAME\n%s\n$BACK2SEARCHRESULT\n$BACK2SEARCH\n$GOTOHISTORY\n$DONE" "$arrayattachmentname")

                fi

            else

                if [ "$OPTURL" = "SRB2" ]; then

                    SRB2=$(curl -s "https://api.github.com/repos/STJr/SRB2/releases/latest" | gawk -F'"' '/browser_download_url.*./ {print $4}')
                    SRB2APPIMAGE=$(curl -s "https://api.github.com/repos/GoldenTails/SRB2/releases/latest" | gawk -F'"' '/browser_download_url.*.AppImage/ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/STJr/SRB2/zipball"
                    SOURCECODETAR="https://api.github.com/repos/STJr/SRB2/tarball"
                    arrayfile=$(printf "$SRB2\n$SRB2APPIMAGE\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone")
                    arrayfilename=$(printf "$(printf "%s\n" "$SRB2" | gawk -F'/' '{print $NF}')\n$(printf "%s\n" "$SRB2APPIMAGE" | gawk -F'/' '{print $NF}')\nSRB2 Source Code (zip)\nSRB2 Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE")

                elif [ "$OPTURL" = "SRB2NetPlus" ]; then

                    SOURCECODEZIP="https://git.do.srb2.org/api/v4/projects/275/repository/archive.zip?sha=master"
                    SOURCECODETAR="https://git.do.srb2.org/api/v4/projects/275/repository/archive.tar.gz?sha=master"
                    arrayfile=$(printf "$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone")
                    arrayfilename=$(printf "SRB2 NetPlus Source Code (zip)\nSRB2 NetPlus Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE")

                elif [ "$OPTURL" = "SRB2rphys" ]; then

                    SRB2RPHYS=$(curl -s "https://api.github.com/repos/katsy/srb2/releases/latest" | gawk -F'"' '/browser_download_url.*./ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/katsy/srb2/zipball"
                    SOURCECODETAR="https://api.github.com/repos/katsy/srb2/tarball"
                    arrayfile=$(printf "$SRB2RPHYS\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone")
                    arrayfilename=$(printf "$(printf "%s\n" "$SRB2RPHYS" | gawk -F'/' '{print $NF}')\nSRB2 rphys Source Code (zip)\nSRB2 rphys Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE")

                elif [ "$OPTURL" = "SRB2TSoURDt3rd" ]; then

                    SRB2TSOURDT3RD=$(curl -s "https://api.github.com/repos/StarManiaKG/The-Story-of-Uncapped-Revengence-Discord-the-3rd/releases/latest" | gawk -F'"' '/browser_download_url.*./ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/StarManiaKG/The-Story-of-Uncapped-Revengence-Discord-the-3rd/zipball"
                    SOURCECODETAR="https://api.github.com/repos/StarManiaKG/The-Story-of-Uncapped-Revengence-Discord-the-3rd/tarball"
                    arrayfile=$(printf "$SRB2TSOURDT3RD\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone")
                    arrayfilename=$(printf "$(printf "%s\n" "$SRB2TSOURDT3RD" | gawk -F'/' '{print $NF}')\nSRB2 SRB2TSoURDt3rd Source Code (zip)\nSRB2 TSoURDt3rd Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE")

                elif [ "$OPTURL" = "SRB2VR" ]; then

                    SRB2VRHEADER=$(curl -X GET -LIs "https://mb.srb2.org/addons/srb2-vr-mod.3559/download" | gawk -F'"' '/filename/ {print $2}')

                    if [ -z "$SRB2VRHEADER" ]; then

                        SRB2VR="$(curl -s https://mb.srb2.org/addons/srb2-vr-mod.3559/download/ | gawk -F'<a href="|"' '/download\?file=/ {print "https://mb.srb2.org"$2}')"

                    else

                        SRB2VR="https://mb.srb2.org/addons/srb2-vr-mod.3559/download"

                    fi

                    SOURCECODEZIP="https://git.do.srb2.org/api/v4/projects/393/repository/archive.zip?sha=openvr"
                    SOURCECODETAR="https://git.do.srb2.org/api/v4/projects/393/repository/archive.tar.gz?sha=openvr"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2VR")
                    arrayfilename=$(printf "%s\nSRB2 VR Source Code (zip)\nSRB2 VR Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(for vr in $SRB2VR; do curl -X GET -LIs "$vr" | gawk -F'"' '{IGNORECASE=1} /Content-Disposition:/ {print $2}'; done)")

                elif [ "$OPTURL" = "SRB2Persona" ]; then

                    SRB2PERSONAHEADER=$(curl -X GET -LIs "https://mb.srb2.org/addons/166/download" | gawk -F'"' '/filename/ {print $2}')

                    if [ -z "$SRB2PERSONAHEADER" ]; then

                        SRB2PERSONA="$(curl -s https://mb.srb2.org/addons/166/download/ | gawk -F'<a href="|"' '/download\?file=/ {print $2}')"

                    else

                        SRB2PERSONA="https://mb.srb2.org/addons/166/download"

                    fi

                    SOURCECODEZIP="https://git.do.srb2.org/api/v4/projects/97/repository/archive.zip?sha=srb2p_22"
                    SOURCECODETAR="https://git.do.srb2.org/api/v4/projects/97/repository/archive.tar.gz?sha=srb2p_22"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2PERSONA")
                    arrayfilename=$(printf "%s\nSRB2 Persona Source Code (zip)\nSRB2 Persona Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(for p in $SRB2PERSONA; do curl -X GET -LIs "$p" | gawk -F'"' '{IGNORECASE=1} /Content-Disposition:/ {print $2}'; done)")

                elif [ "$OPTURL" = "SRB2Android" ]; then

                    SRB2ANDROID=$(curl -s "https://api.github.com/repos/SRB2-Mobile/SRB2-Android/releases" | gawk -F'"' '/browser_download_url.*./ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/SRB2-Mobile/SRB2-Android/zipball"
                    SOURCECODETAR="https://api.github.com/repos/SRB2-Mobile/SRB2-Android/tarball"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2ANDROID")
                    arrayfilename=$(printf "%s\nSRB2 Android Source Code (zip)\nSRB2 Android Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(printf "%s\n" "$SRB2ANDROID" | gawk -F'/' '{print $NF}')")

                elif [ "$OPTURL" = "SRB2Switch" ]; then

                    SRB2SWITCH=$(curl -s "https://api.github.com/repos/heyjoeway/SRB2/releases" | gawk -F'"' '/browser_download_url.*./ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/heyjoeway/SRB2/zipball"
                    SOURCECODETAR="https://api.github.com/repos/heyjoeway/SRB2/tarball"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2SWITCH")
                    arrayfilename=$(printf "%s\nSRB2 Switch Source Code (zip)\nSRB2 Switch Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(printf "%s\n" "$SRB2SWITCH" | gawk -F'/' '{print $NF}')")

                elif [ "$OPTURL" = "SRB2-2.1" ]; then

                    SRB2OLD21=$(curl -s "https://api.github.com/repos/STJr/SRB2/releases/19358575" | gawk -F'"' '/browser_download_url.*zip/ || /browser_download_url.*exe/ || /browser_download_url.*dmg/ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/STJr/SRB2/zipball/SRB2_release_2.1.25"
                    SOURCECODETAR="https://api.github.com/repos/STJr/SRB2/tarball/SRB2_release_2.1.25"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2OLD21")
                    arrayfilename=$(printf "%s\nSRB2 2.1 Source Code (zip)\nSRB2 2.1 Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(printf "%s\n" "$SRB2OLD21" | gawk -F'/' '{print $NF}')")

                elif [ "$OPTURL" = "SRB2-2.1-Legacy" ]; then

                    SOURCECODEZIP="https://api.github.com/repos/P-AS/srb2-legacy/zipball"
                    SOURCECODETAR="https://api.github.com/repos/P-AS/srb2-legacy/tarball"
                    arrayfile=$(printf "$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone")
                    arrayfilename=$(printf "SRB2 2.1 Legacy Source Code (zip)\nSRB2 2.1 Legacy Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE")

                elif [ "$OPTURL" = "SRB2-2.1-MegaDrive" ]; then

                    SRB2MEGADRIVE=$(curl -s "https://api.github.com/repos/mazmazz/SRB2/releases" | gawk -F'"' '/browser_download_url.*md/ && !/.msi/ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/mazmazz/SRB2/zipball/SRB2_release_2.1.23a"
                    SOURCECODETAR="https://api.github.com/repos/mazmazz/SRB2/tarball/SRB2_release_2.1.23a"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2MEGADRIVE")
                    arrayfilename=$(printf "%s\nSRB2 2.1 SEGA Genesis/Mega Drive Source Code (zip)\nSRB2 2.1 SEGA Genesis/Mega Drive Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(printf "%s\n" "$SRB2MEGADRIVE" | gawk -F'/' '{print $NF}')")

                elif [ "$OPTURL" = "SRB2Archive" ]; then

                    SRB2ARCHIVE=$(curl -s "https://files.srb2.org/srb2.org/history/" | gawk -F'">|</a>' '(/.zip/ || /.exe/) && !/&gt;/ {print $3}')
                    arrayfile=$(printf "%s\nBack2Addon\nBack2Cat\nDone" "$SRB2ARCHIVE")
                    arrayfilename=$(printf "%s\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$SRB2ARCHIVE")

                elif [ "$OPTURL" = "SRB2Kart" ]; then

                    SRB2KART=$(curl -s "https://api.github.com/repos/STJr/Kart-Public/releases/latest" | gawk -F'"' '/browser_download_url.*./ {print $4}')
                    SRB2KARTAPPIMAGE=$(curl -s "https://api.github.com/repos/Lonsfor/srb2k-appimage/releases/latest" | gawk -F'"' '!/moe|.zsync/ && /browser_download_url.*.AppImage/ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/STJr/Kart-Public/zipball"
                    SOURCECODETAR="https://api.github.com/repos/STJr/Kart-Public/tarball"
                    arrayfile=$(printf "$SRB2KART\n$SRB2KARTAPPIMAGE\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone")
                    arrayfilename=$(printf "%s\n$(printf "%s\n" "$SRB2KARTAPPIMAGE" | gawk -F'/' '{print $NF}')\nSRB2Kart Source Code (zip)\nSRB2Kart Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(printf "%s\n" "$SRB2KART" | gawk -F'/' '{print $NF}')")

                elif [ "$OPTURL" = "SRB2KartGalaxy" ]; then

                    SRB2KARTGALAXYHEADER=$(curl -X GET -LIs https://mb.srb2.org/addons/srb2kart-galaxy.4500/download | gawk -F'"' '/filename/ {print $2}')

                    if [ -z "$SRB2KARTGALAXYHEADER" ]; then

                        SRB2KARTGALAXY="$(curl -s https://mb.srb2.org/addons/srb2kart-galaxy.4500/download/ | gawk -F'<a href="|"' '/download\?file=/ {print "https://mb.srb2.org"$2}')"

                    else

                        SRB2KARTGALAXY="https://mb.srb2.org/addons/srb2kart-galaxy.4500/download"

                    fi

                    SOURCECODEZIP="https://git.do.srb2.org/api/v4/projects/305/repository/archive.zip?sha=Galaxy-Redux"
                    SOURCECODETAR="https://git.do.srb2.org/api/v4/projects/305/repository/archive.tar.gz?sha=Galaxy-Redux"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2KARTGALAXY")
                    arrayfilename=$(printf "%s\nSRB2Kart Galaxy Source Code (zip)\nSRB2Kart Galaxy Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(for k in $SRB2KARTGALAXY; do curl -X GET -LIs "$k" | gawk -F'"' '{IGNORECASE=1} /Content-Disposition:/ {print $2}'; done)")

                elif [ "$OPTURL" = "SRB2KartHEP" ]; then

                    SRB2KARTHEPHEADER=$(curl -X GET -LIs "https://mb.srb2.org/addons/hayas-expansion-pak.5254/download" | gawk -F'"' '/filename/ {print $2}')

                    if [ -z "$SRB2KARTHEPHEADER" ]; then

                        SRB2KARTHEP="$(curl -s https://mb.srb2.org/addons/hayas-expansion-pak.5254/download/ | gawk -F'<a href="|"' '/download\?file=/ {print "https://mb.srb2.org"$2}')"

                    else

                        SRB2KARTHEP="https://mb.srb2.org/addons/hayas-expansion-pak.5254/download"

                    fi

                    SOURCECODEZIP="https://git.do.srb2.org/api/v4/projects/322/repository/archive.zip?sha=Glalxy"
                    SOURCECODETAR="https://git.do.srb2.org/api/v4/projects/322/repository/archive.tar.gz?sha=Glalxy"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2KARTHEP")
                    arrayfilename=$(printf "%s\nSRB2Kart HEP Source Code (zip)\nSRB2Kart HEP Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(for k in $SRB2KARTHEP; do curl -X GET -LIs "$k" | gawk -F'"' '{IGNORECASE=1} /Content-Disposition:/ {print $2}'; done)")

                elif [ "$OPTURL" = "SRB2KartSaturn" ]; then

                    SRB2KARTSATURN=$(curl -s "https://api.github.com/repos/Indev450/SRB2Kart-Saturn/releases/latest" | gawk -F'"' '/browser_download_url.*./ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/Indev450/SRB2Kart-Saturn/zipball"
                    SOURCECODETAR="https://api.github.com/repos/Indev450/SRB2Kart-Saturn/tarball"
                    arrayfile=$(printf "$SRB2KARTSATURN\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone")
                    arrayfilename=$(printf "$(printf "%s\n" "$SRB2KARTSATURN" | gawk -F'/' '{print $NF}')\nSRB2Kart Saturn Source Code (zip)\nSRB2Kart Saturn Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE")

                elif [ "$OPTURL" = "SRB2KartVR" ]; then

                    SRB2KARTVRHEADER=$(curl -X GET -LIs "https://mb.srb2.org/addons/sonic-kart-vr-mod.2436/download" | gawk -F'"' '/filename/ {print $2}')

                    if [ -z "$SRB2KARTVRHEADER" ]; then

                        SRB2KARTVR="$(curl -s https://mb.srb2.org/addons/sonic-kart-vr-mod.2436/download/ | gawk -F'<a href="|"' '/download\?file=/ {print "https://mb.srb2.org"$2}')"

                    else

                        SRB2KARTVR="https://mb.srb2.org/addons/sonic-kart-vr-mod.2436/download"

                    fi

                    SOURCECODEZIP="https://git.do.srb2.org/api/v4/projects/369/repository/archive.zip?sha=openvr"
                    SOURCECODETAR="https://git.do.srb2.org/api/v4/projects/369/repository/archive.tar.gz?sha=openvr"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2KARTVR")
                    arrayfilename=$(printf "%s\nSRB2Kart VR Source Code (zip)\nSRB2Kart VR Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(for vr in $SRB2KARTVR; do curl -X GET -LIs "$vr" | gawk -F'"' '{IGNORECASE=1} /Content-Disposition:/ {print $2}'; done)")

                elif [ "$OPTURL" = "SRB2KartSwitch" ]; then

                    SRB2KARTSWITCH=$(curl -s "https://api.github.com/repos/heyjoeway/Kart-Public/releases" | gawk -F'"' '/browser_download_url.*./ {print $4}')
                    SOURCECODEZIP="https://api.github.com/repos/heyjoeway/Kart-Public/zipball"
                    SOURCECODETAR="https://api.github.com/repos/heyjoeway/Kart-Public/tarball"
                    arrayfile=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR\nBack2Addon\nBack2Cat\nDone" "$SRB2KARTSWITCH")
                    arrayfilename=$(printf "%s\nSRB2Kart Switch Source Code (zip)\nSRB2Kart Switch Source Code (tar.gz)\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(printf "%s\n" "$SRB2KARTSWITCH" | gawk -F'/' '{print $NF}')")

                elif [ -z "$LATEST" ] && [ -z "$arrayattachment" ]; then

                    arrayfile=$(printf "Back2Addon\nBack2Cat\nHistory\nDone")
                    arrayfilename=$(printf "$BACK2ADDON\n$BACK2CAT\n$GOTOHISTORY\n$DONE")

                elif [ -z "$LATEST" ] && [ -n "$arrayattachment" ]; then

                    arrayfile=$(printf "%s\nBack2Addon\nBack2Cat\nHistory\nDone" "$arrayattachment")
                    arrayfilename=$(printf "%s\n$BACK2ADDON\n$BACK2CAT\n$GOTOHISTORY\n$DONE" "$arrayattachmentname")

                elif [ -n "$LATEST" ] && [ -z "$arrayattachment" ]; then

                    arrayfile=$(printf "$LATEST\nBack2Addon\nBack2Cat\nHistory\nDone")
                    arrayfilename=$(printf "$LATESTNAME\n$BACK2ADDON\n$BACK2CAT\n$GOTOHISTORY\n$DONE")

                else

                    arrayfile=$(printf "$LATEST\n%s\nBack2Addon\nBack2Cat\nHistory\nDone" "$arrayattachment")
                    arrayfilename=$(printf "$LATESTNAME\n%s\n$BACK2ADDON\n$BACK2CAT\n$GOTOHISTORY\n$DONE" "$arrayattachmentname")

                fi

            fi

        fi

        if [ "$HISTORY" = 1 ]; then

            arrayfile="$array"
            arrayfilename="$arrayname"

        fi

        count=$(printf "%s\n" "$arrayfile" | wc -l)
        n=""
        $PRINTF "%s\n" "$arrayfilename" | gawk '{print NR")", $0}'
        while true; do

            $PRINTF "$PROMPT%s\e[0m" "#? "
            read -r n

            if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                OPTFILE=$(printf "%s\n" "$arrayfile" | gawk 'NR=='"${n}"'')
                OPTFILENAME=$(printf "%s\n" "$arrayfilename" | gawk 'NR=='"${n}"'')

                if [ "$OPTFILE" = "History" ]; then

                    choosehistory

                elif [ "$OPTFILE" = "Back2Addon" ]; then

                    clear

                    if [ "$REUSABLE" = 1 ]; then

                        if [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        fi

                    else

                        if [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        fi

                    fi

                elif [ "$OPTFILE" = "Back2Cat" ]; then

                    clear

                    if [ "$REUSABLE" = 1 ]; then

                        if [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        fi

                    else

                        if [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        fi

                    fi

                elif [ "$OPTFILE" = "Back2SearchResult" ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        if [ "$REUSABLE" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search-user

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search-user

                        fi

                    else

                        if [ "$REUSABLE" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search

                        fi

                    fi

                elif [ "$OPTFILE" = "Back2Search" ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        if [ "$REUSABLE" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search-user

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search-user

                        fi

                    else

                        if [ "$REUSABLE" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search

                        fi

                    fi

                elif [ "$OPTFILE" = "Done" ]; then

                    dl

                elif [ "$OPTFILE" = "Back2History" ]; then

                    choosehistory

                else

                    if [ "$OPTURL" = "SRB2" ] || [ "$OPTURL" = "SRB2NetPlus" ] || [ "$OPTURL" = "SRB2rphys" ] || [ "$OPTURL" = "SRB2TSoURDt3rd" ] || [ "$OPTURL" = "SRB2VR" ] || [ "$OPTURL" = "SRB2Persona" ] || [ "$OPTURL" = "SRB2Android" ] || [ "$OPTURL" = "SRB2Switch" ] || [ "$OPTURL" = "SRB2-2.1" ] || [ "$OPTURL" = "SRB2-2.1-Legacy" ] || [ "$OPTURL" = "SRB2-2.1-MegaDrive" ] || [ "$OPTURL" = "SRB2Kart" ] || [ "$OPTURL" = "SRB2KartGalaxy" ] || [ "$OPTURL" = "SRB2KartHEP" ] || [ "$OPTURL" = "SRB2KartSaturn" ] || [ "$OPTURL" = "SRB2KartVR" ] || [ "$OPTURL" = "SRB2KartSwitch" ]; then

                        FILELISTTMP="$OPTFILE"

                    elif [ "$OPTURL" = "SRB2Archive" ]; then

                        FILELISTTMP="https://files.srb2.org/srb2.org/history/$OPTFILE"

                    else

                        FILELISTTMP="https://mb.srb2.org/$OPTFILE"

                    fi

                    if [ -n "$(printf "%s\n" "$FILELISTTMP" | gawk '/mb.srb2.org/ {print}')" ]; then

                        THREADNAME="$OPTURLTHREAD$THREADNAME"
                        FILELISTCODE=$(curl -X GET -LIs "$FILELISTTMP")
                        THREADLIST="$THREADLIST
$THREADNAME $(printf "%s\n" "$FILELISTCODE" | gawk -F'Content-Length: ' '{IGNORECASE=1} /Content-Length:/ {gsub("\r",""); print $NF}' | tail -n1) $FILELISTTMP \"$(printf "%s\n" "$FILELISTCODE" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')\""

                    fi

                    FILELIST="$FILELIST
$FILELISTTMP"
                    FILELIST=$(printf "%s\n" "$FILELIST" | gawk 'NF {print}')
                    FILELISTNAMETMP="$OPTFILENAME"
                    FILELISTNAME="$FILELISTNAME
$FILELISTNAMETMP"
                    FILELISTNAME=$(printf "%s\n" "$FILELISTNAME" | gawk 'NF {print}')

                fi
                break

            else

                $PRINTF "$NOTICE\n%s\n\e[0m" "No file has been chosen."
                exit

            fi

        done

    elif [ "$OPTURL" = "Next" ]; then

        clear

        if [ "$SEARCH" = 1 ]; then

            arraynextpage=$(curl -s "$SEARCHURL&page=$((PAGE + 1))" | gawk -F'<a href="|</a>' '/addons/ {split($2,a,"\""); print a[1]}' | gawk -F'/' '!/\/addons\/$|latest-reviews|categories/ && NF {print $3}')

        else

            arraynextpage=$(curl -s "$CATURL=$((PAGE + 1))" | gawk -F'"|/updates|/addons/' '/<dd>/ {print $3}' | gawk 'NF{print}')

        fi

        if [ -n "$arraynextpage" ]; then

            if [ "$REUSABLE" = 1 ]; then

                if [ "$SEARCH" = 1 ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="$SEARCHPAGE" SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 FILES=0 REUSABLE=1 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="$SEARCHPAGE" SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 FILES=0 REUSABLE=1 exec "$0" --search

                    fi

                elif [ "$CHARACTER" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE="$CHARACTERPAGE" CHARACTER=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MAP" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE="$MAPPAGE" MAP=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$GAMETYPE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE="$GAMETYPEPAGE" GAMETYPE=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$ASSET" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE="$ASSETPAGE" ASSET=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$LUA" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE="$LUAPAGE" LUA=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MODEL" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE="$MODELPAGE" MODEL=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$PLAYERCOLOR" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE="$PLAYERCOLORPAGE" PLAYERCOLOR=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MISC" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE="$MISCPAGE" MISC=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$SOFTWARE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE="$SOFTWAREPAGE" SOFTWARE=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$BUILD" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE="$BUILDPAGE" BUILD=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$KARTCHARACTER" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE="$KARTCHARACTERPAGE" KARTCHARACTER=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTMAP" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE="$KARTMAPPAGE" KARTMAP=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTMISC" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE="$KARTMISCPAGE" KARTMISC=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTBUILD" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE="$KARTBUILDPAGE" KARTBUILD=1 FILES=0 REUSABLE=1 exec "$0" --kart

                fi

            else

                if [ "$SEARCH" = 1 ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="$SEARCHPAGE" SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 FILES=0 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="$SEARCHPAGE" SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 FILES=0 exec "$0" --search

                    fi

                elif [ "$CHARACTER" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE="$CHARACTERPAGE" CHARACTER=1 FILES=0 exec "$0"

                elif [ "$MAP" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE="$MAPPAGE" MAP=1 FILES=0 exec "$0"

                elif [ "$GAMETYPE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE="$GAMETYPEPAGE" GAMETYPE=1 FILES=0 exec "$0"

                elif [ "$ASSET" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE="$ASSETPAGE" ASSET=1 FILES=0 exec "$0"

                elif [ "$LUA" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE="$LUAPAGE" LUA=1 FILES=0 exec "$0"

                elif [ "$MODEL" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE="$MODELPAGE" MODEL=1 FILES=0 exec "$0"

                elif [ "$PLAYERCOLOR" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE="$PLAYERCOLORPAGE" PLAYERCOLOR=1 FILES=0 exec "$0"

                elif [ "$MISC" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE="$MISCPAGE" MISC=1 FILES=0 exec "$0"

                elif [ "$SOFTWARE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE="$SOFTWAREPAGE" SOFTWARE=1 FILES=0 exec "$0"

                elif [ "$BUILD" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE="$BUILDPAGE" BUILD=1 FILES=0 exec "$0"

                elif [ "$KARTCHARACTER" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE="$KARTCHARACTERPAGE" KARTCHARACTER=1 FILES=0 exec "$0" --kart

                elif [ "$KARTMAP" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE="$KARTMAPPAGE" KARTMAP=1 FILES=0 exec "$0" --kart

                elif [ "$KARTMISC" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE="$KARTMISCPAGE" KARTMISC=1 FILES=0 exec "$0" --kart

                elif [ "$KARTBUILD" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE="$KARTBUILDPAGE" KARTBUILD=1 FILES=0 exec "$0" --kart

                fi

            fi

        else

            if [ "$REUSABLE" = 1 ]; then

                if [ "$SEARCH" = 1 ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 FILES=0 REUSABLE=1 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 FILES=0 REUSABLE=1 exec "$0" --search

                    fi

                elif [ "$CHARACTER" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MAP" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$GAMETYPE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$ASSET" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$LUA" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MODEL" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$PLAYERCOLOR" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MISC" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$SOFTWARE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$BUILD" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$KARTCHARACTER" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTMAP" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTMISC" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTBUILD" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 FILES=0 REUSABLE=1 exec "$0" --kart

                fi

            else

                if [ "$SEARCH" = 1 ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 FILES=0 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 FILES=0 exec "$0" --search

                    fi

                elif [ "$CHARACTER" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 FILES=0 exec "$0"

                elif [ "$MAP" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 FILES=0 exec "$0"

                elif [ "$GAMETYPE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 FILES=0 exec "$0"

                elif [ "$ASSET" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 FILES=0 exec "$0"

                elif [ "$LUA" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 FILES=0 exec "$0"

                elif [ "$MODEL" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 FILES=0 exec "$0"

                elif [ "$PLAYERCOLOR" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 FILES=0 exec "$0"

                elif [ "$MISC" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 FILES=0 exec "$0"

                elif [ "$SOFTWARE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 FILES=0 exec "$0"

                elif [ "$BUILD" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 FILES=0 exec "$0"

                elif [ "$KARTCHARACTER" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 FILES=0 exec "$0" --kart

                elif [ "$KARTMAP" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 FILES=0 exec "$0" --kart

                elif [ "$KARTMISC" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 FILES=0 exec "$0" --kart

                elif [ "$KARTBUILD" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 FILES=0 exec "$0" --kart

                fi

            fi

        fi

    elif [ "$OPTURL" = "Prev" ]; then

        clear

        if [ "$SEARCH" = 1 ]; then

            arrayprevpage=$(printf "%s\nPrev\nNext\nBack2Search\nDone" "$(curl -s "$SEARCHURL&page=$((PAGE - 1))" | gawk -F'<a href="|</a>' '/addons/ {split($2,a,"\""); print a[1]}' | gawk -F'/' '!/\/addons\/$|latest-reviews|categories/ && NF {print $3}')")

        elif [ "$BUILD" = 1 ]; then

            arrayprevpage=$(printf "SRB2\nSRB2NetPlus\nSRB2rphys\nSRB2TSoURDt3rd\nSRB2VR\nSRB2Persona\nSRB2Android\nSRB2Switch\nSRB2-2.1\nSRB2-2.1-Legacy\nSRB2-2.1-MegaDrive\nSRB2Archive\n%s\nPrev\nNext\nBack2Cat\nDone" "$(curl -s "$CATURL=$((PAGE - 1))" | gawk -F'"|/updates|/addons/' '/<dd>/ {print $3}' | gawk 'NF{print}')")

        elif [ "$KARTBUILD" = 1 ]; then

            arrayprevpage=$(printf "SRB2Kart\nSRB2KartGalaxy\nSRB2KartHEP\nSRB2KartSaturn\nSRB2KartVR\nSRB2KartSwitch\n%s\nPrev\nNext\nBack2Cat\nDone" "$(curl -s "$CATURL=$((PAGE - 1))" | gawk -F'"|/updates|/addons/' '/<dd>/ {print $3}' | gawk 'NF{print}')")

        else

            arrayprevpage=$(printf "%s\nPrev\nNext\nBack2Cat\nDone" "$(curl -s "$CATURL=$((PAGE - 1))" | gawk -F'"|/updates|/addons/' '/<dd>/ {print $3}' | gawk 'NF{print}')")

        fi

        if [ "$arraypage" = "$arrayprevpage" ]; then

            if [ "$REUSABLE" = 1 ]; then

                if [ "$SEARCH" = 1 ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 FILES=0 REUSABLE=1 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 FILES=0 REUSABLE=1 exec "$0" --search

                    fi

                elif [ "$CHARACTER" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MAP" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$GAMETYPE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$ASSET" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$LUA" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MODEL" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$PLAYERCOLOR" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MISC" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$SOFTWARE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$BUILD" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$KARTCHARACTER" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTMAP" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTMISC" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTBUILD" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 FILES=0 REUSABLE=1 exec "$0" --kart

                fi

            else

                if [ "$SEARCH" = 1 ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 FILES=0 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 FILES=0 exec "$0" --search

                    fi

                elif [ "$CHARACTER" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 FILES=0 exec "$0"

                elif [ "$MAP" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 FILES=0 exec "$0"

                elif [ "$GAMETYPE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 FILES=0 exec "$0"

                elif [ "$ASSET" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 FILES=0 exec "$0"

                elif [ "$LUA" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 FILES=0 exec "$0"

                elif [ "$MODEL" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 FILES=0 exec "$0"

                elif [ "$PLAYERCOLOR" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 FILES=0 exec "$0"

                elif [ "$MISC" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 FILES=0 exec "$0"

                elif [ "$SOFTWARE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 FILES=0 exec "$0"

                elif [ "$BUILD" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 FILES=0 exec "$0"

                elif [ "$KARTCHARACTER" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 FILES=0 exec "$0" --kart

                elif [ "$KARTMAP" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 FILES=0 exec "$0" --kart

                elif [ "$KARTMISC" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 FILES=0 exec "$0" --kart

                elif [ "$KARTBUILD" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 FILES=0 exec "$0" --kart

                fi

            fi

        else

            if [ "$REUSABLE" = 1 ]; then

                if [ "$SEARCH" = 1 ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 FILES=0 REUSABLE=1 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 2)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 FILES=0 REUSABLE=1 exec "$0" --search

                    fi

                elif [ "$CHARACTER" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 2)) CHARACTER=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MAP" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 2)) MAP=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$GAMETYPE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 2)) GAMETYPE=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$ASSET" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 2)) ASSET=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$LUA" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 2)) LUA=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MODEL" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 2)) MODEL=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$PLAYERCOLOR" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 2)) PLAYERCOLOR=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$MISC" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 2)) MISC=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$SOFTWARE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 2)) SOFTWARE=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$BUILD" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 2)) BUILD=1 FILES=0 REUSABLE=1 exec "$0"

                elif [ "$KARTCHARACTER" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 2)) KARTCHARACTER=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTMAP" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 2)) KARTMAP=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTMISC" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 2)) KARTMISC=1 FILES=0 REUSABLE=1 exec "$0" --kart

                elif [ "$KARTBUILD" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 2)) KARTBUILD=1 FILES=0 REUSABLE=1 exec "$0" --kart

                fi

            else

                if [ "$SEARCH" = 1 ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 FILES=0 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 2)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 FILES=0 exec "$0" --search

                    fi

                elif [ "$CHARACTER" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 2)) CHARACTER=1 FILES=0 exec "$0"

                elif [ "$MAP" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 2)) MAP=1 FILES=0 exec "$0"

                elif [ "$GAMETYPE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 2)) GAMETYPE=1 FILES=0 exec "$0"

                elif [ "$ASSET" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 2)) ASSET=1 FILES=0 exec "$0"

                elif [ "$LUA" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 2)) LUA=1 FILES=0 exec "$0"

                elif [ "$MODEL" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 2)) MODEL=1 FILES=0 exec "$0"

                elif [ "$PLAYERCOLOR" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 2)) PLAYERCOLOR=1 FILES=0 exec "$0"

                elif [ "$MISC" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 2)) MISC=1 FILES=0 exec "$0"

                elif [ "$SOFTWARE" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 2)) SOFTWARE=1 FILES=0 exec "$0"

                elif [ "$BUILD" = 1 ]; then

                    unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 2)) BUILD=1 FILES=0 exec "$0"

                elif [ "$KARTCHARACTER" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 2)) KARTCHARACTER=1 FILES=0 exec "$0" --kart

                elif [ "$KARTMAP" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 2)) KARTMAP=1 FILES=0 exec "$0" --kart

                elif [ "$KARTMISC" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 2)) KARTMISC=1 FILES=0 exec "$0" --kart

                elif [ "$KARTBUILD" = 1 ]; then

                    unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 2)) KARTBUILD=1 FILES=0 exec "$0" --kart

                fi

            fi

        fi

    elif [ "$OPTURL" = "Back2Cat" ]; then

        clear

        if [ "$REUSABLE" = 1 ]; then

            if [ "$CHARACTER" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$MAP" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$GAMETYPE" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$ASSET" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$LUA" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$MODEL" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$PLAYERCOLOR" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$MISC" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$SOFTWARE" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$BUILD" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=0 FILES=0 REUSABLE=1 exec "$0"

            elif [ "$KARTCHARACTER" = 1 ]; then

                unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=0 FILES=0 REUSABLE=1 exec "$0" --kart

            elif [ "$KARTMAP" = 1 ]; then

                unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=0 FILES=0 REUSABLE=1 exec "$0" --kart

            elif [ "$KARTMISC" = 1 ]; then

                unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=0 FILES=0 REUSABLE=1 exec "$0" --kart

            elif [ "$KARTBUILD" = 1 ]; then

                unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD

                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=0 FILES=0 REUSABLE=1 exec "$0" --kart

            fi

        else

            if [ "$CHARACTER" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=0 FILES=0 exec "$0"

            elif [ "$MAP" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=0 FILES=0 exec "$0"

            elif [ "$GAMETYPE" = 1 ]; then
                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=0 FILES=0 exec "$0"

            elif [ "$ASSET" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=0 FILES=0 exec "$0"

            elif [ "$LUA" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=0 FILES=0 exec "$0"

            elif [ "$MODEL" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=0 FILES=0 exec "$0"

            elif [ "$PLAYERCOLOR" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=0 FILES=0 exec "$0"

            elif [ "$MISC" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=0 FILES=0 exec "$0"

            elif [ "$SOFTWARE" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=0 FILES=0 exec "$0"

            elif [ "$BUILD" = 1 ]; then

                unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=0 FILES=0 exec "$0"

            elif [ "$KARTCHARACTER" = 1 ]; then

                unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=0 FILES=0 exec "$0" --kart

            elif [ "$KARTMAP" = 1 ]; then

                unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=0 FILES=0 exec "$0" --kart

            elif [ "$KARTMISC" = 1 ]; then

                unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=0 FILES=0 exec "$0" --kart

            elif [ "$KARTBUILD" = 1 ]; then

                unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=0 FILES=0 exec "$0" --kart

            fi

        fi

    elif [ "$OPTURL" = "Back2Search" ]; then

        if [ -n "$SEARCHQUERYUSER" ]; then

            if [ "$REUSABLE" = 1 ]; then

                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 FILES=0 REUSABLE=1 exec "$0" --search-user

            else

                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 FILES=0 exec "$0" --search-user

            fi

        else

            if [ "$REUSABLE" = 1 ]; then

                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 FILES=0 REUSABLE=1 exec "$0" --search

            else

                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 FILES=0 exec "$0" --search

            fi

        fi

    elif [ "$OPTURL" = "Done" ]; then

        dl

    fi
}

choosehistory() {
    NEXT="\033[1m\033[34mNext Page $((PAGE + 1))\033[0m"
    PREV="\033[1m\033[34mPrevious Page $((PAGE - 1))\033[0m"
    BACK2CAT="\033[1m\033[34mBack to categories\033[0m"
    BACK2ADDON="\033[1m\033[34mBack to addons\033[0m"
    BACK2SEARCHRESULT="\033[1m\033[34mBack to search results\033[0m"
    BACK2SEARCH="\033[1m\033[34mBack to search\033[0m"
    BACK2HISTORY="\033[1m\033[34mBack to history\033[0m"
    GOTOHISTORY="\033[1m\033[34mHistory\033[0m"
    DONE="\033[1m\033[34mDone\033[0m"
    HISTCODE=$(curl -sL "https://mb.srb2.org/addons/$OPTURL/history")
    VERSIONS=$(printf "%s\n" "$HISTCODE" | gawk -F'dataList-cell">|</td>' '/<td class="dataList-cell">/ {print $2}' | gawk 'NF{print}')
    RELEASEDATE=$(printf "%s\n" "$HISTCODE" | gawk -F'">|</time>' '/<\/time>/ && !/<a href=/ {print $2}')
    DOWNLOADS=$(printf "%s\n" "$HISTCODE" | gawk '/<td class="dataList-cell">/ {getline; gsub("<td class=\"dataList-cell\">",""); print $NF}' | gawk 'NF{print}')
    STARNUMS=$(printf "%s\n" "$HISTCODE" | gawk -F'title="|star\\(s\\)' '/star\(s\)/ && /ratingStars/ {print $2}')
    STARS=$(for i in $STARNUMS; do
        if [ "${i%%.*}" = 0 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^0.[0-9]*$/,"☆ ☆ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 1 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^1.[0-9]*$/,"★ ☆ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 2 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^2.[0-9]*$/,"★ ★ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 3 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^3.[0-9]*$/,"★ ★ ★ ☆ ☆")'

        elif [ "${i%%.*}" = 4 ] && [ "${i##*.}" -lt 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^4.[0-9]*$/,"★ ★ ★ ★ ☆")'

        elif [ "${i%%.*}" = 5 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^5.[0-9]*$/,"★ ★ ★ ★ ★")'

        elif [ "${i%%.*}" = 0 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^0.[0-9]*$/,"⯪ ☆ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 1 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^1.[0-9]*$/,"★ ⯪ ☆ ☆ ☆")'

        elif [ "${i%%.*}" = 2 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^2.[0-9]*$/,"★ ★ ⯪ ☆ ☆")'

        elif [ "${i%%.*}" = 3 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^3.[0-9]*$/,"★ ★ ★ ⯪ ☆")'

        elif [ "${i%%.*}" = 4 ] && [ "${i##*.}" -ge 50 ]; then

            printf "%s\n" "$i" | gawk 'gsub(/^4.[0-9]*$/,"★ ★ ★ ★ ⯪")'

        fi

    done)

    MBCODE="$HISTCODE"
    checksrb2mb

    if [ "$HISTORY" != 1 ]; then

        $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose addon's version by typing number and then pressing enter. Press enter or ctrl+c to quit."

        if [ "$SEARCH" = 1 ]; then

            array=$(printf "%s\nBack2SearchResult\nBack2Search\nDone" "$(printf "%s\n" "$HISTCODE" | gawk -F'<a href="|"' '/version/ && /download/ {print $4}' | gawk 'NF{print "https://mb.srb2.org/"$0}')")
            arrayname=$(printf "%s\n$BACK2SEARCHRESULT\n$BACK2SEARCH\n$DONE" "$(
                gawk -v left="$VERSIONS" -v center="$RELEASEDATE" -v rightcenter="$DOWNLOADS" -v right="$STARS" 'BEGIN{
split(left,l,/\n/)
split(center,c,/\n/)
split(rightcenter,rc,/\n/)
split(right,r,/\n/)
for (i = 1; i in l; i++)
{print "\033[1m"l[i]"\033[0m" " - " "\033[2mRelease date: "c[i]"\033[0m" " - " "\033[37mDownloads: "rc[i]"\033[0m" " - " "\033[1;33m"r[i]"\033[0m"}}' | gawk '!/N\/A/ {print}'
            )")

        else

            array=$(printf "%s\nBack2Addon\nBack2Cat\nDone" "$(printf "%s\n" "$HISTCODE" | gawk -F'<a href="|"' '/version/ && /download/ {print $4}' | gawk 'NF{print "https://mb.srb2.org/"$0}')")
            arrayname=$(printf "%s\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$(
                gawk -v left="$VERSIONS" -v center="$RELEASEDATE" -v rightcenter="$DOWNLOADS" -v right="$STARS" 'BEGIN{
split(left,l,/\n/)
split(center,c,/\n/)
split(rightcenter,rc,/\n/)
split(right,r,/\n/)
for (i = 1; i in l; i++)
{print "\033[1m"l[i]"\033[0m" " - " "\033[2mRelease date: "c[i]"\033[0m" " - " "\033[37mDownloads: "rc[i]"\033[0m" " - " "\033[1;33m"r[i]"\033[0m"}}' | gawk '!/N\/A/ {print}'
            )")

        fi

        count=$(printf "%s\n" "$array" | wc -l)
        n=""
        $PRINTF "%s\n" "$arrayname" | gawk '{print NR")", $0}'
        while true; do

            $PRINTF "$PROMPT%s\e[0m" "#? "
            read -r n

            if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                OPTFILE=$(printf "%s\n" "$array" | gawk NR=="${n}")
                OPTFILENAME=$(printf "%s\n" "$array" | gawk NR=="${n}")

                if [ "$OPTFILE" = "Back2Addon" ]; then

                    clear

                    if [ "$REUSABLE" = 1 ]; then

                        if [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        fi

                    else

                        if [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        fi

                    fi

                elif [ "$OPTFILE" = "Back2Cat" ]; then

                    clear

                    if [ "$REUSABLE" = 1 ]; then

                        if [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                        fi

                    else

                        if [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                        fi

                    fi

                elif [ "$OPTFILE" = "Back2SearchResult" ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        if [ "$REUSABLE" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search-user

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search-user

                        fi

                    else

                        if [ "$REUSABLE" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search

                        fi

                    fi

                elif [ "$OPTFILE" = "Back2Search" ]; then

                    if [ -n "$SEARCHQUERYUSER" ]; then

                        if [ "$REUSABLE" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search-user

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search-user

                        fi

                    else

                        if [ "$REUSABLE" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search

                        fi

                    fi

                elif [ "$OPTFILE" = "Done" ]; then

                    dl

                fi

                break

            else

                $PRINTF "$NOTICE\n%s\n\e[0m" "No file has been chosen."
                exit

            fi

        done

    fi

    if [ "$HISTORY" != 1 ]; then

        FILECODE=$(curl -sL "$OPTFILE" | gawk -F'"' '/addons*.*download/ && !/og:url/ {print $2}')

        $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose file by typing number and then pressing enter. Press enter or ctrl+c to quit."
        if [ -n "$FILECODE" ]; then

            arrayfiletmp=$(for v in $FILECODE; do
                printf "%s\n" "https://mb.srb2.org/$v"
            done)

        else

            arrayfiletmp="$OPTFILE"

        fi

        arrayfilenametmp=$(for v in $arrayfiletmp; do
            curl -X GET -sLI "$v" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}'
        done)

        if [ "$SEARCH" = 1 ]; then

            arrayfile=$(printf "%s\nBack2History\nBack2SearchResult\nBack2Search\nDone" "$arrayfiletmp")
            arrayfilename=$(printf "%s\n$BACK2HISTORY\n$BACK2SEARCHRESULT\n$BACK2SEARCH\n$DONE" "$arrayfilenametmp")

        else

            arrayfile=$(printf "%s\nBack2History\nBack2Addon\nBack2Cat\nDone" "$arrayfiletmp")
            arrayfilename=$(printf "%s\n$BACK2HISTORY\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$arrayfilenametmp")

        fi

    elif [ "$HISTORY" = 1 ]; then

        arrayfile="$arrayfile"
        arrayfilename="$arrayfilename"

    fi

    count=$(printf "%s\n" "$arrayfile" | wc -l)
    n=""
    $PRINTF "%s\n" "$arrayfilename" | gawk '{print NR")", $0}'
    while true; do

        $PRINTF "$PROMPT%s\e[0m" "#? "
        read -r n

        if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

            OPTFILE=$(printf "%s\n" "$arrayfile" | gawk 'NR=='"${n}"'')
            OPTFILENAME=$(printf "%s\n" "$arrayfilename" | gawk 'NR=='"${n}"'')

            if [ "$OPTFILE" = "Back2History" ]; then

                if [ "$REUSABLE" = 1 ]; then

                    if [ "$CHARACTER" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE="$CHARACTERPAGE" CHARACTER=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$MAP" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE="$MAPPAGE" MAP=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$GAMETYPE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE="$GAMETYPEPAGE" GAMETYPE=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$ASSET" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE="$ASSETPAGE" ASSET=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$LUA" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE="$LUAPAGE" LUA=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$MODEL" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE="$MODELPAGE" MODEL=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$PLAYERCOLOR" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE="$PLAYERCOLORPAGE" PLAYERCOLOR=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$MISC" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE="$MISCPAGE" MISC=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$SOFTWARE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE="$SOFTWAREPAGE" SOFTWARE=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$BUILD" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE="$BUILDPAGE" BUILD=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$KARTCHARACTER" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE="$KARTCHARACTERPAGE" KARTCHARACTER=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0" --kart

                    elif [ "$KARTMAP" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE="$KARTMAPPAGE" KARTMAP=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0" --kart

                    elif [ "$KARTMISC" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE="$KARTMISCPAGE" KARTMISC=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0" --kart

                    elif [ "$KARTBUILD" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE="$KARTBUILDPAGE" KARTBUILD=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0" --kart

                    fi

                else

                    if [ "$CHARACTER" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE="$CHARACTERPAGE" CHARACTER=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0"

                    elif [ "$MAP" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE="$MAPPAGE" MAP=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0"

                    elif [ "$GAMETYPE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE="$GAMETYPEPAGE" GAMETYPE=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0"

                    elif [ "$ASSET" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE="$ASSETPAGE" ASSET=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0"

                    elif [ "$LUA" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE="$LUAPAGE" LUA=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0"

                    elif [ "$MODEL" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE="$MODELPAGE" MODEL=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 HISTORY=1 exec "$0"

                    elif [ "$PLAYERCOLOR" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE="$PLAYERCOLORPAGE" PLAYERCOLOR=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0"

                    elif [ "$MISC" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE="$MISCPAGE" MISC=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0"

                    elif [ "$SOFTWARE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE="$SOFTWAREPAGE" SOFTWARE=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0"

                    elif [ "$BUILD" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE="$BUILDPAGE" BUILD=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0"

                    elif [ "$KARTCHARACTER" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE="$KARTCHARACTERPAGE" KARTCHARACTER=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0" --kart

                    elif [ "$KARTMAP" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE="$KARTMAPPAGE" KARTMAP=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0" --kart

                    elif [ "$KARTMISC" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE="$KARTMISCPAGE" KARTMISC=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0" --kart

                    elif [ "$KARTBUILD" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE="$KARTBUILDPAGE" KARTBUILD=1 PAGECODE="$PAGECODE" array="$array" arrayname="$arrayname" arrayfile="" arrayfilename="" FILES=0 HISTORY=1 exec "$0" --kart

                    fi

                fi

            elif [ "$OPTFILE" = "Back2Addon" ]; then

                clear

                if [ "$REUSABLE" = 1 ]; then

                    if [ "$CHARACTER" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$MAP" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$GAMETYPE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$ASSET" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$LUA" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$MODEL" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$PLAYERCOLOR" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$MISC" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$SOFTWARE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$BUILD" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$KARTCHARACTER" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                    elif [ "$KARTMAP" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                    elif [ "$KARTMISC" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                    elif [ "$KARTBUILD" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                    fi

                else

                    if [ "$CHARACTER" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$MAP" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$GAMETYPE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$ASSET" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$LUA" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$MODEL" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$PLAYERCOLOR" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$MISC" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$SOFTWARE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$BUILD" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$KARTCHARACTER" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                    elif [ "$KARTMAP" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                    elif [ "$KARTMISC" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                    elif [ "$KARTBUILD" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                    fi

                fi

            elif [ "$OPTFILE" = "Back2Cat" ]; then

                clear

                if [ "$REUSABLE" = 1 ]; then

                    if [ "$CHARACTER" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$MAP" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$GAMETYPE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$ASSET" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$LUA" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$MODEL" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$PLAYERCOLOR" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$MISC" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$SOFTWARE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$BUILD" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$KARTCHARACTER" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                    elif [ "$KARTMAP" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                    elif [ "$KARTMISC" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                    elif [ "$KARTBUILD" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --kart

                    fi

                else

                    if [ "$CHARACTER" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$MAP" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MAPPAGE=$((MAPPAGE - 1)) MAP=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$GAMETYPE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$ASSET" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$LUA" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" LUAPAGE=$((LUAPAGE - 1)) LUA=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$MODEL" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 PAGECODE="$PAGECODE" arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0"

                    elif [ "$PLAYERCOLOR" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$MISC" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" MISCPAGE=$((MISCPAGE - 1)) MISC=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$SOFTWARE" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$BUILD" = 1 ]; then

                        unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=0 arrayfile="" arrayfilename="" FILES=0 exec "$0"

                    elif [ "$KARTCHARACTER" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                    elif [ "$KARTMAP" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                    elif [ "$KARTMISC" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                    elif [ "$KARTBUILD" = 1 ]; then

                        unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --kart

                    fi

                fi

            elif [ "$OPTFILE" = "Back2SearchResult" ]; then

                if [ -n "$SEARCHQUERYUSER" ]; then

                    if [ "$REUSABLE" = 1 ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search-user

                    fi

                else

                    if [ "$REUSABLE" = 1 ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search

                    fi

                fi

            elif [ "$OPTFILE" = "Back2Search" ]; then

                if [ -n "$SEARCHQUERYUSER" ]; then

                    if [ "$REUSABLE" = 1 ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search-user

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search-user

                    fi

                else

                    if [ "$REUSABLE" = 1 ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 REUSABLE=1 exec "$0" --search

                    else

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="" DIRECTORY="$DIRECTORY" SEARCHPAGE="" SEARCHURL="" SEARCH=0 arrayfile="" arrayfilename="" FILES=0 exec "$0" --search

                    fi

                fi

            elif [ "$OPTFILE" = "Done" ]; then

                dl

            else

                FILELISTTMP="$OPTFILE"
                FILELIST="$FILELISTTMP
$FILELIST"

                FILELIST=$(printf "%s\n" "$FILELIST" | gawk 'NF && !/Done|Back2Addon/ {print}')
                FILELISTNAMETMP="$OPTFILENAME"
                FILELISTNAME="$FILELISTNAME
$FILELISTNAMETMP"
                FILELISTNAME=$(printf "%s\n" "$FILELISTNAME" | gawk 'NF && !/Done|Back to addons/ {print}')
                FILELISTCODE=$(curl -X GET -LIs "$FILELISTTMP")
                THREADLIST="$THREADLIST
$THREADNAME $(printf "%s\n" "$FILELISTCODE" | gawk -F'Content-Length: ' '{IGNORECASE=1} /Content-Length:/ {gsub("\r",""); print $NF}' | tail -n1) $FILELISTTMP \"$(printf "%s\n" "$FILELISTCODE" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')\""

                clear
                dlanother

            fi

        else

            $PRINTF "$NOTICE\n%s\n\e[0m" "No option has been chosen."
            exit

        fi

    done
}

dl() {
    # Download files when done with selecting.
    DL=$(
        paste /dev/fd/3 /dev/fd/4 3<<- EOF 4<<- EOF | gawk '!a[$0]++ && /http.*:\/\// {print}'
$(printf "%s\n" "$FILELIST" | gawk '!/^$/ {print}')
EOF
$(printf "%s\n" "$DIRECTORY" | gawk '!/^$/ {print}')
EOF
    )

    if [ -n "$FILELIST" ]; then

        $PRINTF "$MESSAGE\n%s\n\e[0m" "Downloading chosen files. Please wait.."

        printf "%s\n" "$DL" | while read -r f d; do

            FILENAME=$(curl -X GET -LIs "$f" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')

            if [ -z "$FILENAME" ]; then

                FILENAME=$(printf "%s\n" "$f" | gawk -F'/' '{print $NF}')

            fi

            if [ -n "$d" ]; then

                COLUMNS=27 curl -#LC - "$f" -o "$d/$FILENAME" || $PRINTF "$FAILURE\n%s\n\e[0m" "There is an issue with downloading $FILENAME." &

            else

                COLUMNS=27 curl -#LC - "$f" -o "$FILENAME" || $PRINTF "$FAILURE\n%s\n\e[0m" "There is an issue with downloading $FILENAME." &

            fi

        done | cat

        if [ ! -d "$SRB2DLROOT" ]; then

            mkdir -p "$SRB2DLROOT"

        fi

        DATABASE=$(
            paste /dev/fd/3 /dev/fd/4 3<<- EOF 4<<- EOF
$(printf "%s\n" "$THREADLIST" | gawk '!/^$/ {print}')
EOF
$(printf "%s\n" "$DIRECTORY" | gawk '!/^$/ {print "\""$0"\""}')
EOF
        )
        printf "%s\n" "$DATABASE" | gawk '!/^ [0-9]/ && NF{gsub("\t"," "); print}' >> "$SRB2DLROOT/srb2dl"
        sort -u "$SRB2DLROOT/srb2dl" | gawk '!/^ "\// {print}' > /tmp/srb2dl
        mv /tmp/srb2dl "$SRB2DLROOT/srb2dl"

        $PRINTF "$SUCCESS\n%s\n\e[0m\a" "Downloading is successful."
        exit

    else

        $PRINTF "$FAILURE\n%s\n\e[0m" "There is an issue with downloading files or files were not chosen. Exiting."
        exit

    fi

}

dlanother() {
    clear
    $PRINTF "$PROMPT%s\e[0m" "Filelist:
$FILELISTNAME"

    # Download on current path or typed from "srb2dl [path to download files]".
    if [ "$SRB2DLAUTODIR" = 1 ] && [ -z "$DIRECTORY" ]; then

        if [ "$KARTCHARACTER" = 1 ] || [ "$KARTMAP" = 1 ] || [ "$KARTMISC" = 1 ] || [ "$KARTBUILD" = 1 ]; then

            if [ "$(uname)" = "Linux" ]; then

                export DIRECTORYROOT=$(find "$HOME" -iname ".srb2kart*" -type d 2> /dev/null)

            else

                export DIRECTORYROOT=$(find "$HOME" -iname "srb2kart*" -type d 2> /dev/null)

            fi

        else

            if [ "$(uname)" = "Linux" ]; then

                export DIRECTORYROOT=$(find "$HOME" -iname ".srb2*" ! -iname ".srb2kart*" -type d 2> /dev/null)

            else

                export DIRECTORYROOT=$(find "$HOME" -iname "srb2*" ! -iname "srb2kart*" -type d 2> /dev/null)

            fi

            if [ "$(printf "%s\n" "$DIRECTORYROOT" | wc -l)" -gt 1 ]; then

                $PRINTF "$MESSAGE\n\n%s\n\e[0m" "Please choose configuration directory by typing number and then pressing enter. Press enter or ctrl+c to quit."
                array=$(printf "%s\n" "$DIRECTORYROOT")
                count=$(printf "%s\n" "$DIRECTORYROOT" | wc -l)
                n=""
                $PRINTF "%s\n" "$array" | gawk '{print NR")", $0}'
                while true; do

                    $PRINTF "$PROMPT%s\e[0m" "#? "
                    read -r n

                    if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                        export DIRECTORYROOT=$(printf "%s\n" "$array" | gawk NR=="${n}")
                        break

                    else

                        $PRINTF "$NOTICE\n%s\n\e[0m" "No option has been chosen."
                        exit

                    fi

                done

            fi

        fi

    elif [ "$SRB2DLAUTODIR" != 1 ]; then

        DIRECTORY="$DIRECTORYTMP
$DIRECTORY"

    fi

    if [ "$SRB2DLAUTODIR" = 1 ]; then

        if [ -z "$DIRECTORYTMP" ]; then

            $PRINTF "$PROMPT\n\n%s\e[0m" "Directory:
$DIRECTORY"

        else

            $PRINTF "$PROMPT\n\n%s\e[0m" "Directory:
$DIRECTORY
$DIRECTORYROOT/$DIRECTORYTMP"

        fi

        $PRINTF "$MESSAGE\n\n%s\n\e[0m" "Please choose directory to download resource by typing number and then pressing enter. Press enter or ctrl+c to quit."

        if [ -n "$arraydir" ]; then

            arraydir="$arraydir"

        else

            arraydir=$(find "$DIRECTORYROOT" -mindepth 1 -type d -printf "%P\n" | sort -u)

        fi

        count="$(printf "%s\n" "$arraydir" | wc -l)"
        n=""
        $PRINTF "%s\n" "$arraydir" | gawk '{print NR")", $0}'
        while true; do

            $PRINTF "$PROMPT%s\e[0m" "#? "
            read -r n

            if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                DIRECTORYTMP=$(printf "%s\n" "$arraydir" | gawk NR=="${n}")
                DIRECTORY="$DIRECTORY
$DIRECTORYROOT/$DIRECTORYTMP"
                break

            else

                $PRINTF "$NOTICE\n%s\n\e[0m" "No option has been chosen."
                exit

            fi

        done

        clear
        $PRINTF "$PROMPT%s\e[0m" "Filelist:
$FILELISTNAME"
        $PRINTF "$PROMPT\n\n%s\e[0m" "Directory:
$DIRECTORY"

    else

        $PRINTF "$PROMPT\n\n%s\n\e[0m" "Directory:
$(printf "%s\n" "$DIRECTORY" | gawk '!a[$0]++ && NF {print}')"

    fi

    if [ -z "$(printf "%s\n" "$IDCODE")" ]; then

        $PRINTF "$MESSAGE\n\n%s\n\e[0m" "Do you want to download other stuff?"
        # Making sure to stack list of selected files ready to download.
        while

            for loop in "Yes" "No"; do printf "%s\n" "$((i += 1))) $loop"; done
            $PRINTF "$PROMPT%s\e[0m" "#? "
            read -r choose
        do

            unset i
            case $choose in

                "1")

                    if [ "$REUSABLE" = 1 ]; then

                        if [ "$SEARCH" = 1 ]; then

                            if [ -n "$SEARCHQUERYUSER" ]; then

                                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0" --search-user

                            else

                                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0" --search

                            fi

                        elif [ "$OLD3" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$OLDURL" BACK2ADDONURL="" BACK2ADDONURL2="$BACK2ADDONURL2" OLD=1 OLD2=1 OLD3=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" REUSABLE=1 exec "$0" --old

                        elif [ "$OLD" = 1 ] && [ -z "$OLD3" ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$OLDURL" BACK2ADDONURL="$BACK2ADDONURL" BACK2ADDONURL2="" OLD=1 OLD2=1 OLD3="" arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" REUSABLE=1 exec "$0" --old

                        elif [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" MAPPAGE=$((MAPPAGE - 1)) MAP=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" LUAPAGE=$((LUAPAGE - 1)) LUA=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" MISCPAGE=$((MISCPAGE - 1)) MISC=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" OPTURL="$OPTURL" FILES=1 REUSABLE=1 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 REUSABLE=1 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" OPTURL="$OPTURL" FILES=1 REUSABLE=1 exec "$0" --kart

                        fi

                    else

                        if [ "$SEARCH" = 1 ]; then

                            if [ -n "$SEARCHQUERYUSER" ]; then

                                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERYUSER="$SEARCHQUERYUSER" SEARCH=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0" --search-user

                            else

                                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" SEARCHPAGE=$((SEARCHPAGE - 1)) SEARCHURL="$SEARCHURL" SEARCHQUERY="$SEARCHQUERY" SEARCH=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0" --search

                            fi

                        elif [ "$HISTORY" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" HISTCODE="$HISTCODE" HISTID="$HISTID" HISTORY=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" exec "$0" --history

                        elif [ "$ID" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" IDCODE="$IDCODE" ID="$ID" arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" exec "$0" --id

                        elif [ "$OLD3" = 1 ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$OLDURL" BACK2ADDONURL="" BACK2ADDONURL2="$BACK2ADDONURL2" OLD=1 OLD2=1 OLD3=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" exec "$0" --old

                        elif [ "$OLD" = 1 ] && [ -z "$OLD3" ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$OLDURL" BACK2ADDONURL="$BACK2ADDONURL" BACK2ADDONURL2="" OLD=1 OLD2=1 OLD3="" arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" exec "$0" --old

                        elif [ "$CHARACTER" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" CHARACTERPAGE=$((CHARACTERPAGE - 1)) CHARACTER=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0"

                        elif [ "$MAP" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" MAPPAGE=$((MAPPAGE - 1)) MAP=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0"

                        elif [ "$GAMETYPE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" GAMETYPEPAGE=$((GAMETYPEPAGE - 1)) GAMETYPE=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0"

                        elif [ "$ASSET" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" ASSETPAGE=$((ASSETPAGE - 1)) ASSET=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0"

                        elif [ "$LUA" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" LUAPAGE=$((LUAPAGE - 1)) LUA=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0"

                        elif [ "$MODEL" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" MODELPAGE=$((MODELPAGE - 1)) MODEL=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0"

                        elif [ "$PLAYERCOLOR" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" PLAYERCOLORPAGE=$((PLAYERCOLORPAGE - 1)) PLAYERCOLOR=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0"

                        elif [ "$MISC" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" MISCPAGE=$((MISCPAGE - 1)) MISC=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0"

                        elif [ "$SOFTWARE" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" SOFTWAREPAGE=$((SOFTWAREPAGE - 1)) SOFTWARE=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0"

                        elif [ "$BUILD" = 1 ]; then

                            unset CHARACTER MAP GAMETYPE ASSET LUA MODEL PLAYERCOLOR MISC SOFTWARE BUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" BUILDPAGE=$((BUILDPAGE - 1)) BUILD=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" OPTURL="$OPTURL" FILES=1 exec "$0"

                        elif [ "$KARTCHARACTER" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" KARTCHARACTERPAGE=$((KARTCHARACTERPAGE - 1)) KARTCHARACTER=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0" --kart

                        elif [ "$KARTMAP" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" KARTMAPPAGE=$((KARTMAPPAGE - 1)) KARTMAP=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0" --kart

                        elif [ "$KARTMISC" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" KARTMISCPAGE=$((KARTMISCPAGE - 1)) KARTMISC=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" FILES=1 exec "$0" --kart

                        elif [ "$KARTBUILD" = 1 ]; then

                            unset KARTCHARACTER KARTMAP KARTMISC KARTBUILD
                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" PAGECODE="$PAGECODE" KARTBUILDPAGE=$((KARTBUILDPAGE - 1)) KARTBUILD=1 arraydir="$arraydir" arrayfile="$arrayfile" arrayfilename="$arrayfilename" OPTURL="$OPTURL" FILES=1 exec "$0" --kart

                        fi

                    fi
                    ;;

                "2")

                    dl
                    ;;

            esac

        done

    fi
}

srb2logo() {
    cat << 'LOGO'
				                                      `````````````
				                              ``-://+ooooooooooooooo++//:-.``
				                         `.:/+oossssssssssssssssssssssoooooo+/:-`
				                      .:+oossssssssssssssssssssoo++/:::::::::-----.`
				     ``           `:+ossssssssssssssssssssoo+/:-----------....`````
				    `.//.      `-+osssssssssssssssssssoo+::://+-.---...````````
				   ``.-:++.  ./osssssssssssssssssssoo+//+//:--:/`.``````````
				   ``.--:/:-+ossssssssssssssssssso+//+/::/oo--::``````````
				   ``.---.+ossssssssssssssssssso++++:-/shhdy--::````````
				   ```-..+sssssssssssyhhhhhssssoo+-:oyydmmmy----`````
				   ````.:osssssssssshhhhhhhyso+/:---/shmmmms.--.````
				   ```.-:/osssssssssyhhhhys+/:--------+hmmd/---.`.:+++/:-.`
				   -//-.--:/+oooooo++++//::-------------sdh.---..-/osssssoo+:-`
				  `/:--------:::::::---..-::-..----------::----.--::+oossssssoo+:.
				  ..-.--------------.:odmNMMMNh/`--------------.------:://+oooossso/.
				  `-h/.-----------.+hmMMMMMMMMMMy.--------------------------:::/++ooo+-`
				   :ms`---------.:ymMMMMMMmmMMMMMy`-------------------------------:://++:`
				   -Nm-.-------./dNMMMMMN//++NMMMN:.-----------------------------------:::.
				   .mN+ ------.:hNMMMMMMh yM:yMMMMy.----------------------------------------`
				   `yMy `----..hNMMMMMMMs +N:oMMMMh`-----------------------------------------.
				    /Mm. `...`smMMMMMMMMo  ` oMMMMo.-------------------..........`````.......-.
				    `NN/  ```/dMMMMMMMMMy `  sMMMm-----------.....```````````````````````
				`:/. /Nh` ``/dMMMMMMMMMMN.```hMMM+`.----...```````````````````
				 /ymd.`/+/ydNMMMMMMMMMMMMh:.oNMN/```````````````````````
				  ``      oso+smMMMMMMMMMMMMMMy.``````````````````````
				      .//+hmmmdssdMMMMMMMMMNh/`````````````````````.---`
				      `/yydmmmmmdyshdhhhysssyhhyo.`````````````````-----.
				        -oydmmmmmmmddhhdddmmdy/+ds````````````````.------.
				          -ohddmmmmmmmdhhyyssoysdo`````````````````-------.
				            `:oyhddmmmddhhddmddy/` `````````````````.------.
				                .-/+osyyyso+/-`       ```````````````.------
				                                            ```````````.----.
				                                                ````````.----
				                                                    `````.---`
				                                                       ```.--.
				                                                         ```--
				                                                            `.
LOGO
}

srb2kartlogo() {
    cat << 'LOGO'
				                     `-+hhNMMMMMMMMMMMMMMNhhhs//``
			                        /sNMMMmdyyyssssssyyyyhhNMMMMMMMho:`
			                      /dMMMNo-`    ``         -dMMMMMMMMMMNy-`
			                    -dMMMNhy///:://///+++++/+yNMMMmdyosydNMMMm:
			                  `oNMMm+.    ---://:.``   +NMMmo.````````:dMMMo
			                  hMMMNs:-----/yyo:------/sNMMm/-----------+mMMMy
			                `hMMMy/.`````./.````...``+MMN:```.://:.`````.sMMMo
			               `yMMMy` `--` `:``.:::..`./dMMo``-ymhyydmo.````.hMMN-
			               oMMMms/:::/osssso++/////yNMNs+ommso++++ohNh++++oNMMs
			              -MMMh.       oy:         `NMs `hd.        /m+    oMMm
			              yMMMh/:::---:o:---::::::+dMNo:hm/---------:sNy:--sMMN-
			             :MMMy....::.`-/`.:/:-.```+MN/`oN-````````````oN:```sMMo
			             sMMN/`    `/-+-::.       +Md.-Nh             .hh. `+MMo
			             mMMm+/::::::sdo/::::::::+mMy/hMN+:::::::::::::oMs::sMMo
			            .NMMo`..`    --   `.--.`  dM``mMm`              ds  `MMo
			            oMMMy::/++/:-o/:/o+:----:yMM/+MMMh:-------------ym/:+MMo
			            oMMd/`````./:+/+-````````-mh.hMMMh.`````````````/m/`:MMo
			            oMMh:......./y/........../m/-mMMMd-`````````````:mo.+MMo
			            oMMh/:::-....o-...-:::-..----yhhhy:-------------:so-/MMo
			            oMM+   `.:-  +` .:-`                                .MMo
			            oMMd/:::::/o+y+o+/:::::::::::::::::::::::::::::::::/sMMo
			            oMM/        :h+`             ./++++++++++++++++++++smMMo
			            oMMho::--....o:..``.--.`````/NMMMNddddddddddddddddddddd-
			            oMMNs..-:/+:-+:.:+/:--------/mMd.`
			             mMy`      -//--:`          `hMm.
			             mMms::::::::sho::::::::::::+mMMdhhhhhhhhhhhhhhhhhhhhh+
			             mMN:`....    /`    ..`      .dMNmmmmmmmmmmmmmNMMNmNMMm
			             /MMd+:::+o+/:+o::/o/::::::::+mNs/::::::::::::yMNo:+NMm
			             :MMm-     `.///.::`         `-mh`````````````/Nh-`oMMm
			              yMN:        .os/            -dNs:          .yM: `mMMy
			              /MMMh/++++/:::o+:::/+/:::::::ohMd/::::::::sNMh::sMMM-
			               NMMo    `.::-`:` `:`         `ym:`      `oMy. `hMMy
			               :NMNh+::::::+oos/o/:::::::::::hmNmo::::+mNd+-/hMMM.
			                +MMMy`       `/s:     ```     `.odNmNmho.```oMMN/
			                 /NMMy-`````   `-`   `-`          ````   `:oMMM/
			                  /dMMMNd///+oos++/:/o/:::::::::::::::::oNMMMN:
			                    yMMMMy/.   `-/+::.                 .oMMMd.
			                     ./dMMMNdso++//+o:::::::::::::::/oyNMMd:
			                        .+yhMMMMMMNNNmdhhhyyyyyyyyhmNMMNo:
			                            ``-///shhhhhhNMMMMMMMdhho/-`
LOGO
}

srb2oldlogo() {
    cat << 'LOGO'

                                                       .----oooo/sssss/---oo----`..
                                                .`-o/ssssssssssssss/`--oo``ssssssssso-.
                       --`                 .-osssssssssssssssssss/--o.-/ss-.sssss/ooo----.
                      `-/sso`          .-osssssssssssssssssssss-.-/`-s `oss oss/o-----------`.
                      ---osss/      .-/ssssssssssssssssssssss-.-o`-ssh- --/--/-----------------`.
                      -----/ss/  .-osssssssssssssssssssssss-.-/`-ssshhs ---- ---------------------`
                      `-----``.--osssssssssssssssssssssss/--s``/ssshhhh ---- `------------------`````
                      `---. `--osssssssssssssssssssssssso`/-.osssshhhhh ----..-----```````````````...
                     .``..----/sssssssssssssssssssssssssssso``osshhhhh`.----` ````````````````..
                     .. -----/sssssssssssssssssssssssssssssssso--/hhh/ ------ ````````````.
                       -----ossssssssssssssssssssssssssssssssssss-.os `------ `..`````..
                      ------ossssssssssssssssssssssssssssssssssssss` -------- ```.....
                     ---------osssssssssssssssssshhhhhhhsssssssss/o---------- ----oo////-.
                   `------------oo/sssssssssssshhhhhhhhhhsssss/o----------------/sssssssss/-`
                  `------------------ooo/////////s/-------``------------------o/sssssssssssssso`
                  `` -`.`-----------------------`-/hhhhoohhso.`---------------o///sssssssssssssss-`
                  ` hMMo- --------------------`oshhoMMMMMMMMooo.-------------------oo//ssssssssssss/-
                   hMMMMh-.-----------------``hhoMMMMMMMMMMMMMMo`-----------------------oo//ssssssssss-
                  `MMMMMMh.`---------------.ohhoMMMMMMMMMMMMMMMM.----------------------------oo//ssssssso`
                  hMMMMMMMs -------------- /hhMMMMMMMMMMMMMMMMMMo.--------------------------------o///ssss/`
                  MMMMMMMMo.`------------ /hhMMMMMMMMMMMMMMMMMMMo.-------------------------------------o///so
                  MMMMMMMMMo -----------. hhMMMMMMMMMMMMMMMMMMMMo.------------------------------------------oo.
                  MMMMMMMMMo  ---------   oMMMMMMMMMMMMMMMMMMMMMo.---------------------------------------------.
                  MMMMMMMMM.   ------```  .MMMMMMMMMMMMMMMMMMMMM.-----------------------------------------------`
                  oMMMMMMMM   oo.```.-Mo   MMMMMMMMMMMMMMMMMMMMM ------------------------`````````````````````````
                  oMMMMMMMM   Mo-s//h.Mo   MMMMMMMMMMMMMMMMMMMMo`--------------````````````````````````.....
                   oMMMMMMMo  ..MMMMMh.   oMMMMMMMMMMMMMMMMMMMo -----------``````````````````````..
                   -MMMMMMMMo..oMMMMMMs``-MMMMMMMMMMMMMMMMMMMo`---------````````````````````..
                    -hhhhhhhhhoos-o/oshoMMMMMMMMMMMMMMMMMMMh-.--.`--```````````````````..
                     -ohoo-`.    hhhhh/o-/osoMMMMMMMMMMhsooohhhhhso.```````````````.  ..
                          ..--/shhhhhhhhhhhs/-/oooooo/-/shhhhhhhhhhh`.``````````.  .`````
                      .hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh-.```````.  ``````---`
                        shhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh-hhhhhhh-.`````````````-------
                         -shhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh/.hhhhhhh ````````````---------`
                           -sshhhhhhhhhhhhhhhhhhhhhhhhhhh--ohhhhhhh..`````````````---------
                             `ossshhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhs`.````````````````-------.
                                `-/ssssshhhhhhhhhhhhhhhhhhhhhhs/`.````````````````````------
                                    .--o/sssssssssssssssssso-`   ............```````````----
                                           ..`--------...                          ....```--.
                                                                                         ..-.
LOGO
}

case "$2" in

    -k | --kart)

        # Make variables to be remembered after rerunning script with "exec $0".
        if [ "$KARTCHARACTER" = 1 ]; then

            KARTCHARACTER=1

        elif [ "$KARTMAP" = 1 ]; then

            KARTMAP=1

        elif [ "$KARTMISC" = 1 ]; then

            KARTMISC=1

        elif [ "$KARTBUILD" = 1 ]; then

            KARTBUILD=1

        else

            KARTCHARACTER=0
            KARTMAP=0
            KARTMISC=0
            KARTBUILD=0
            FILES=0

            if [ "$SRB2DLAUTODIR" != 1 ] && [ -z "$DIRECTORY" ]; then

                if [ "$1" = "-r" ] || [ "$1" = "--reusable" ]; then

                    REUSABLE=1
                    shift

                fi

                if [ -z "$2" ]; then

                    export DIRECTORYTMP="$(pwd)"

                else

                    export DIRECTORYTMP="$2"

                fi

            fi

        fi

        if [ "$KARTCHARACTER" = 0 ] || [ "$KARTMAP" = 0 ] || [ "$KARTMISC" = 0 ] || [ "$KARTBUILD" = 0 ]; then

            # Choose SRB2 Kart category.
            while

                clear
                srb2kartlogo
                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose category by typing number and then pressing enter. Press enter or ctrl+c to quit."
                for loop in "Kart Characters" "Kart Maps" "Kart Miscellaneous" "Kart Builds" "$($PRINTF "\033[1m\033[34m%s\033[0m" "Done")"; do $PRINTF "%s\n" "$((i += 1))) $loop"; done
                $PRINTF "$PROMPT%s\e[0m" "#? "
                read -r choose
            do

                unset i

                if [ -n "$choose" ]; then

                    case $choose in

                        "1")

                            KARTCHARACTER=1
                            break
                            ;;

                        "2")

                            KARTMAP=1
                            break
                            ;;

                        "3")

                            KARTMISC=1
                            break
                            ;;

                        "4")

                            KARTBUILD=1
                            break
                            ;;

                        "5")

                            dl
                            ;;

                    esac

                else

                    $PRINTF "$NOTICE\n%s\n\e[0m" "No category has been chosen."
                    exit

                fi

            done

        fi

        if [ "$KARTCHARACTER" = 1 ]; then

            KARTCHARACTERPAGE=$((KARTCHARACTERPAGE + 1))
            PAGE="$KARTCHARACTERPAGE" CATURL="https://mb.srb2.org/addons/categories/kart-characters.13/?page" choosepage

        elif [ "$KARTMAP" = 1 ]; then

            KARTMAPPAGE=$((KARTMAPPAGE + 1))
            PAGE="$KARTMAPPAGE" CATURL="https://mb.srb2.org/addons/categories/kart-maps.14/?page" choosepage

        elif [ "$KARTMISC" = 1 ]; then

            KARTMISCPAGE=$((KARTMISCPAGE + 1))
            PAGE="$KARTMISCPAGE" CATURL="https://mb.srb2.org/addons/categories/kart-miscellaneous.15/?page" choosepage

        elif [ "$KARTBUILD" = 1 ]; then

            KARTBUILDPAGE=$((KARTBUILDPAGE + 1))
            PAGE="$KARTBUILDPAGE" CATURL="https://mb.srb2.org/addons/categories/kart-custom-builds.16/?page" choosepage

        fi

        dlanother
        ;;

    -r | --reusable)

        # Reusable variable for various other script's options.
        REUSABLE=1
        ;;

    -s | --search)

        # Make variables to be remembered after rerunning script with "exec $0".
        if [ "$SEARCH" = 1 ] && [ "$FILES" = 1 ] && [ -n "$SEARCHURL" ]; then

            SEARCH=1
            FILES=1
            SEARCHURL="$SEARCHURL"

        else

            SEARCH=1
            FILES=0
            SEARCHURL="$SEARCHURL"

        fi

        if ([ "$SEARCH" = 1 ] && [ "$FILES" = 1 ] && [ -n "$SEARCHURL" ]) || ([ "$SEARCH" = 1 ] && [ "$FILES" = 0 ] && [ -n "$SEARCHURL" ]); then

            SEARCHPAGE=$((SEARCHPAGE + 1))
            PAGE="$SEARCHPAGE" choosepage
            dlanother

        elif [ "$SEARCH" = 1 ] && [ "$FILES" = 0 ] && [ -z "$SEARCHURL" ]; then

            if [ -n "$3" ]; then

                if [ "$(printf "%s\n" "$*" | gawk '{print $1}')" = "-r" ] || [ "$(printf "%s\n" "$*" | gawk '{print $1}')" = "--reusable" ]; then

                    REUSABLE=1
                    shift 2
                    OPTS="$*"
                    ENDARG=$(printf "%s\n" "$OPTS" | gawk 'match($NF, /\//) {print substr($NF, RSTART, RLENGTH)}')

                    if [ "$ENDARG" = "/" ]; then

                        SEARCHQUERY="${OPTS% *}"

                        if [ "$SRB2DLAUTODIR" != 1 ]; then

                            export DIRECTORYTMP="${OPTS##* }"

                        fi

                    else

                        SEARCHQUERY="$*"

                        if [ "$SRB2DLAUTODIR" != 1 ]; then

                            export DIRECTORYTMP=$(pwd)

                        fi

                    fi

                fi

            else

                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please enter resource to search."
                read -r SEARCHQUERY

            fi

            # Search resource functionality.
            WEBKITRANDOM=$(date | md5sum | gawk '{print substr($1,length($1)-14)}')
            SEARCHCOOKIES=$(curl -is https://mb.srb2.org/search | gawk -F'=|"|;' '/xf2_csrf|xfToken/ {gsub(/^[\t]+/,""); print $2$9}' | gawk 'NF{print}')
            XF_CSRF=$(printf "%s\n" "xf2_csrf=$SEARCHCOOKIES" | head -n1)
            XFTOKEN=$(printf "%s\n" "$SEARCHCOOKIES" | head -n1)
            SEARCHFORM="$(printf '%b_' '------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="keywords"\r\n\r\n'"$SEARCHQUERY"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[users]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[newer_than]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[older_than]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[prefixes][]"\r\n\r\n'"$REUSABLE"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[categories][]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[child_categories]"\r\n\r\n1\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="order"\r\n\r\ndate\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="search_type"\r\n\r\nresource\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfToken"\r\n\r\n'"$XFTOKEN"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfRequestUri"\r\n\r\n/search/?type=resource\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfWithData"\r\n\r\n1\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfToken"\r\n\r\n'"$XFTOKEN"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfResponseType"\r\n\r\njson\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'--\r\n')"
            SEARCHFORM="${SEARCHFORM%_}"
            SEARCHURL=$(curl -s 'https://mb.srb2.org/search/search' -H 'accept: application/json, text/javascript' -H 'Sec-Fetch-Dest: empty' -H 'Sec-Fetch-Mode: cors' -H 'Sec-Fetch-Site: same-origin' -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary'"$WEBKITRANDOM"'' -H 'cookie: '"$XF_CSRF"'' --data-binary "$SEARCHFORM" --compressed | gawk -F'"' '/redirect/ {print $4}' | gawk '{gsub(/\[/,"\\["); gsub(/\]/,"\\]"); print}')

            MBCODE="$SEARCHCOOKIES"
            checksrb2mb

            SEARCHPAGE=$((SEARCHPAGE + 1))
            PAGE="$SEARCHPAGE" SEARCHURL="$SEARCHURL" choosepage
            dlanother

        fi
        ;;

    -u | --search-user)

        if [ "$SEARCH" = 1 ] && [ "$FILES" = 1 ] && [ -n "$SEARCHURL" ]; then

            SEARCH=1
            FILES=1
            SEARCHURL="$SEARCHURL"

        else

            SEARCH=1
            FILES=0
            SEARCHURL="$SEARCHURL"

        fi

        if ([ "$SEARCH" = 1 ] && [ "$FILES" = 1 ] && [ -n "$SEARCHURL" ]) || ([ "$SEARCH" = 1 ] && [ "$FILES" = 0 ] && [ -n "$SEARCHURL" ]); then

            SEARCHPAGE=$((SEARCHPAGE + 1))
            PAGE="$SEARCHPAGE" choosepage
            dlanother

        elif [ "$SEARCH" = 1 ] && [ "$FILES" = 0 ] && [ -z "$SEARCHURL" ]; then

            if [ -n "$3" ]; then

                # Checks to make sure --reusable option does not become part of search query.
                if [ "$(printf "%s\n" "$*" | gawk '{print $1}')" = "-r" ] || [ "$(printf "%s\n" "$*" | gawk '{print $1}')" = "--reusable" ]; then

                    REUSABLE=1
                    shift 2
                    OPTS="$*"
                    ENDARG=$(printf "%s\n" "$OPTS" | gawk 'match($NF, /\//) {print substr($NF, RSTART, RLENGTH)}')

                    if [ "$ENDARG" = "/" ]; then

                        SEARCHQUERYUSER="${OPTS% *}"

                        if [ "$SRB2DLAUTODIR" != 1 ]; then

                            export DIRECTORYTMP="${OPTS##* }"

                        fi

                    else

                        SEARCHQUERYUSER="$*"

                        if [ "$SRB2DLAUTODIR" != 1 ]; then

                            export DIRECTORYTMP=$(pwd)

                        fi

                    fi

                fi

            else

                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please enter resource to search."
                read -r SEARCHQUERYUSER

            fi

            # Search user functionality.
            WEBKITRANDOM=$(date | md5sum | gawk '{print substr($1,length($1)-14)}')
            SEARCHCOOKIES=$(curl -is https://mb.srb2.org/search | gawk -F'=|"|;' '/xf2_csrf|xfToken/ {gsub(/^[\t]+/,""); print $2$9}' | gawk 'NF{print}')
            XF_CSRF=$(printf "%s\n" "xf2_csrf=$SEARCHCOOKIES" | head -n1)
            XFTOKEN=$(printf "%s\n" "$SEARCHCOOKIES" | head -n1)
            SEARCHFORM="$(printf '%b_' '------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="keywords"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[users]"\r\n\r\n'"$SEARCHQUERYUSER"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[newer_than]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[older_than]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[prefixes][]"\r\n\r\n'"$REUSABLE"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[categories][]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[child_categories]"\r\n\r\n1\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="order"\r\n\r\ndate\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="search_type"\r\n\r\nresource\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfToken"\r\n\r\n'"$XFTOKEN"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfRequestUri"\r\n\r\n/search/?type=resource\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfWithData"\r\n\r\n1\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfToken"\r\n\r\n'"$XFTOKEN"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfResponseType"\r\n\r\njson\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'--\r\n')"
            SEARCHFORM="${SEARCHFORM%_}"
            SEARCHURL=$(curl -s 'https://mb.srb2.org/search/search' -H 'accept: application/json, text/javascript' -H 'Sec-Fetch-Dest: empty' -H 'Sec-Fetch-Mode: cors' -H 'Sec-Fetch-Site: same-origin' -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary'"$WEBKITRANDOM"'' -H 'cookie: '"$XF_CSRF"'' --data-binary "$SEARCHFORM" --compressed | gawk -F'"' '/redirect/ {print $4}' | gawk '{gsub(/\[/,"\\["); gsub(/\]/,"\\]"); print}')

            MBCODE="$SEARCHCOOKIES"
            checksrb2mb

            SEARCHPAGE=$((SEARCHPAGE + 1))
            PAGE="$SEARCHPAGE" choosepage
            dlanother

        fi
        ;;

esac

case "$1" in

    -h | --help)

        $PRINTF "%s\n" "
Download SRB2/SRB2Kart addons, software and builds.

Usage: srb2dl [OPTIONS] <addon-id/search-query> <directory-path>
  OPTIONS:
     -h, --help                             Show this help text.
     -hst, --history      <addon-id>        Choose version of resource by mb.srb2.org addon ID and download it.
     -i, --id             <addon-id>        Download resource by mb.srb2.org addon ID.
     -k, --kart                             Go to SRB2Kart resources.
     -lu, --listurl                         List URL from database of downloaded files.
     -o, --old                              Go to archived resources for previous SRB2/SRB2Kart versions.
     -ru, --removeurl                       Remove URL from database of downloaded files (preventing of upgrading undesired resources).
     -r, --reusable                         Filter resources by reusable.
     -s, --search         <search-query>    Search resources by keyword.
     -u, --search-user    <search-query>    Search resources by user.
     -up, --upgrade                         Upgrade previously downloaded resources, according to database of URLs (only mb.srb2.org is supported).

  EXAMPLES:
     1. Show SRB2 resources and download them to chosen path:
	    srb2dl \"\$HOME/Downloads\"

     2. Go to SRB2Kart resources and download them to current directory:
	    srb2dl --kart

     3. Search for Sonic related content:
            srb2dl --search \"sonic\"

     4. Search for user's reusable content:
            srb2dl --search-user \"user123\" --reusable

     5. Go to archived resources for previous SRB2/SRB2Kart versions and download them to \"\$HOME/Downloads\" path (-r/--reusable option is not supported for -o/--old):
            srb2dl --old \"\$HOME/Downloads\"

     6. Upgrade previously downloaded resources to \"\$HOME/Downloads\" path, according to database of URLs (only mb.srb2.org is supported):
            srb2dl --upgrade \"\$HOME/Downloads\"

     7. Remove URL from database of downloaded files (preventing of upgrading undesired resources):
            srb2dl --removeurl

     8. Download resource by addon ID and download it to \"\$HOME/Downloads\" path:
            srb2dl --id 3457 \"\$HOME/Downloads\"

     9. Choose version of resource by addon ID and download it to \"\$HOME/Downloads\" path:
            srb2dl --history 3457 \"\$HOME/Downloads\"


  NOTES:
     1. Previewing resources is available by setting \"export SRB2DLPREVIEW=1\" and optionally variable BROWSER (for example \"export BROWSER=firefox\") in shell configuration file. Default previewer is w3m, if installed.

     2. If you set \"export SRB2DLAUTODIR=1\" in shell configuration file, script will be able to detect path to SRB2 configuration folder and then let you choose subdirectory, where each addon will be downloaded. WARNING: parsing path to download resource as script's argument is disabled, when this variable is set.

     3. Other environment variables to use. To activate them with value \"1\", do for example \"export SRB2DLDEBUG=1\":

         - SRB2DLDEBUG - Getting verbose output from script. Useful for reporting issues in https://github.com/bijman/srb2dl/issues.
"
        exit
        ;;

    -hst | --history)

        clear

        if [ "$SRB2DLAUTODIR" != 1 ] && [ -z "$DIRECTORY" ]; then

            if [ -z "$3" ]; then

                export DIRECTORYTMP="$(pwd)"

            else

                export DIRECTORYTMP="$(printf "%s\n" "$*" | gawk '{print $NF}')"

            fi

        fi

        DONE="\033[1m\033[34mDone\033[0m"
        BACK2ADDON="\033[1m\033[34mBack to addons\033[0m"

        if [ "$HISTORY" != 1 ] && [ -z "$HISTID" ]; then

            HISTID="$2"
            HISTCODE=$(curl -sL "https://mb.srb2.org/addons/$HISTID/history")
            FILEURL=$(printf "%s\n" "$*" | gawk -F'.' '{gsub("^-i|^--id|/download",""); gsub(" ","\n"); print $NF}' | gawk '/[0-9]/ {print}' | gawk NF'{print "https://mb.srb2.org/addons/"$0"/download"}')
            THREADNAME=$(curl -Ls $(printf "%s\n" "$FILEURL" | gawk '{gsub("/download",""); print}') | gawk -F'/|"|\\\' '/discussionUrl/ {print $12}')

        elif [ "$HISTORY" != 1 ] && [ -n "$HISTID" ]; then

            HISTID="$HISTID"
            HISTCODE=$(curl -sL "https://mb.srb2.org/addons/$HISTID/history")

        elif [ "$HISTORY" = 1 ] && [ -n "$HISTID" ]; then

            HISTID="$HISTID"
            HISTCODE="$HISTCODE"

        fi

        VERSIONS=$(printf "%s\n" "$HISTCODE" | gawk -F'dataList-cell">|</td>' '/<td class="dataList-cell">/ {print $2}' | gawk 'NF{print}')
        RELEASEDATE=$(printf "%s\n" "$HISTCODE" | gawk -F'">|</time>' '/<\/time>/ && !/<a href=/ {print $2}')
        DOWNLOADS=$(printf "%s\n" "$HISTCODE" | gawk '/<td class="dataList-cell">/ {getline; gsub("<td class=\"dataList-cell\">",""); print $NF}' | gawk 'NF{print}')
        STARNUMS=$(printf "%s\n" "$HISTCODE" | gawk -F'title="|star\\(s\\)' '/star\(s\)/ && /ratingStars/ {print $2}')
        STARS=$(for i in $STARNUMS; do
            if [ "${i%%.*}" = 0 ] && [ "${i##*.}" -lt 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^0.[0-9]*$/,"☆ ☆ ☆ ☆ ☆")'

            elif [ "${i%%.*}" = 1 ] && [ "${i##*.}" -lt 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^1.[0-9]*$/,"★ ☆ ☆ ☆ ☆")'

            elif [ "${i%%.*}" = 2 ] && [ "${i##*.}" -lt 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^2.[0-9]*$/,"★ ★ ☆ ☆ ☆")'

            elif [ "${i%%.*}" = 3 ] && [ "${i##*.}" -lt 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^3.[0-9]*$/,"★ ★ ★ ☆ ☆")'

            elif [ "${i%%.*}" = 4 ] && [ "${i##*.}" -lt 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^4.[0-9]*$/,"★ ★ ★ ★ ☆")'

            elif [ "${i%%.*}" = 5 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^5.[0-9]*$/,"★ ★ ★ ★ ★")'

            elif [ "${i%%.*}" = 0 ] && [ "${i##*.}" -ge 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^0.[0-9]*$/,"⯪ ☆ ☆ ☆ ☆")'

            elif [ "${i%%.*}" = 1 ] && [ "${i##*.}" -ge 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^1.[0-9]*$/,"★ ⯪ ☆ ☆ ☆")'

            elif [ "${i%%.*}" = 2 ] && [ "${i##*.}" -ge 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^2.[0-9]*$/,"★ ★ ⯪ ☆ ☆")'

            elif [ "${i%%.*}" = 3 ] && [ "${i##*.}" -ge 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^3.[0-9]*$/,"★ ★ ★ ⯪ ☆")'

            elif [ "${i%%.*}" = 4 ] && [ "${i##*.}" -ge 50 ]; then

                printf "%s\n" "$i" | gawk 'gsub(/^4.[0-9]*$/,"★ ★ ★ ★ ⯪")'

            fi

        done)

        MBCODE="$HISTCODE"
        checksrb2mb

        if [ "$HISTORY" != 1 ]; then

            $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose addon's version by typing number and then pressing enter. Press enter or ctrl+c to quit."
            array=$(printf "%s\nDone" "$(printf "%s\n" "$HISTCODE" | gawk -F'<a href="|"' '/version/ && /download/ {print $4}' | gawk 'NF{print "https://mb.srb2.org/"$0}')")
            arrayname=$(printf "%s\n$DONE" "$(
                gawk -v left="$VERSIONS" -v center="$RELEASEDATE" -v rightcenter="$DOWNLOADS" -v right="$STARS" 'BEGIN{
split(left,l,/\n/)
split(center,c,/\n/)
split(rightcenter,rc,/\n/)
split(right,r,/\n/)
for (i = 1; i in l; i++)
{print "\033[1m"l[i]"\033[0m" " - " "\033[2mRelease date: "c[i]"\033[0m" " - " "\033[37mDownloads: "rc[i]"\033[0m" " - " "\033[1;33m"r[i]"\033[0m"}}' | gawk '!/N\/A/ {print}'
            )")
            count=$(printf "%s\n" "$array" | wc -l)
            n=""
            $PRINTF "%s\n" "$arrayname" | gawk '{print NR")", $0}'
            while true; do

                $PRINTF "$PROMPT%s\e[0m" "#? "
                read -r n

                if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                    OPTFILE=$(printf "%s\n" "$array" | gawk NR=="${n}")
                    OPTFILENAME=$(printf "%s\n" "$array" | gawk NR=="${n}")

                    if [ "$OPTFILE" = "Done" ]; then

                        dl

                    fi

                    break

                else

                    $PRINTF "$NOTICE\n%s\n\e[0m" "No file has been chosen."
                    exit

                fi

            done

        fi

        if [ "$HISTORY" != 1 ]; then

            FILECODE=$(curl -sL "$OPTFILE" | gawk -F'"' '/addons*.*download/ && !/og:url/ {print $2}')

            $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose file by typing number and then pressing enter. Press enter or ctrl+c to quit."
            if [ -n "$FILECODE" ]; then

                arrayfiletmp=$(for v in $FILECODE; do
                    printf "%s\n" "https://mb.srb2.org/$v"
                done)

            else

                arrayfiletmp="$OPTFILE"

            fi

            arrayfilenametmp=$(for v in $arrayfiletmp; do
                curl -X GET -sLI "$v" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}'
            done)

            arrayfile=$(printf "%s\nBack2Addon\nDone" "$arrayfiletmp")
            arrayfilename=$(printf "%s\n$BACK2ADDON\n$DONE" "$arrayfilenametmp")

        elif [ "$HISTORY" = 1 ]; then

            arrayfile="$arrayfile"
            arrayfilename="$arrayfilename"

        fi

        count=$(printf "%s\n" "$arrayfilename" | wc -l)
        n=""
        $PRINTF "%s\n" "$arrayfilename" | gawk '{print NR")", $0}'
        while true; do

            $PRINTF "$PROMPT%s\e[0m" "#? "
            read -r n

            if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                OPTFILE=$(printf "%s\n" "$arrayfile" | gawk 'NR=='"${n}"'')
                OPTFILENAME=$(printf "%s\n" "$arrayfilename" | gawk 'NR=='"${n}"'')

                if [ "$OPTFILE" = "Back2Addon" ]; then

                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" THREADLIST="$THREADLIST" THREADNAME="$THREADNAME" DIRECTORY="$DIRECTORY" arraydir="" arrayfile="" arrayfilename="" HISTORY="" HISTID="$HISTID" exec "$0" --history

                elif [ "$OPTFILE" = "Done" ]; then

                    dl

                else

                    FILELISTTMP="$OPTFILE"
                    FILELIST="$FILELISTTMP
$FILELIST"

                    FILELIST=$(printf "%s\n" "$FILELIST" | gawk 'NF && !/Done|Back2Addon/ {print}')
                    FILELISTNAMETMP="$OPTFILENAME"
                    FILELISTNAME="$FILELISTNAME
$FILELISTNAMETMP"
                    FILELISTNAME=$(printf "%s\n" "$FILELISTNAME" | gawk 'NF && !/Done|Back to addons/ {print}')
                    FILELISTCODE=$(curl -X GET -LIs "$FILELISTTMP")
                    THREADLIST="$THREADLIST
$THREADNAME $(printf "%s\n" "$FILELISTCODE" | gawk -F'Content-Length: ' '{IGNORECASE=1} /Content-Length:/ {gsub("\r",""); print $NF}' | tail -n1) $FILELISTTMP \"$(printf "%s\n" "$FILELISTCODE" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')\""

                    clear
                    HISTORY=1 dlanother

                fi

            else

                $PRINTF "$NOTICE\n%s\n\e[0m" "No option has been chosen."
                exit

            fi

        done

        exit
        ;;

    -i | --id)

        clear

        if [ "$SRB2DLAUTODIR" != 1 ] && [ -z "$DIRECTORY" ]; then

            if [ -z "$3" ]; then

                export DIRECTORYTMP="$(pwd)"

            else

                export DIRECTORYTMP="$(printf "%s\n" "$*" | gawk '{print $NF}')"

            fi

        fi

        DONE="\033[1m\033[34mDone\033[0m"

        if [ "$ID" != 1 ]; then

            FILEURL=$(printf "%s\n" "$*" | gawk -F'.' '{gsub("^-i|^--id|/download",""); gsub(" ","\n"); print $NF}' | gawk '/[0-9]/ {print}' | gawk NF'{print "https://mb.srb2.org/addons/"$0"/download"}')
            THREADNAME=$(curl -Ls $(printf "%s\n" "$FILEURL" | gawk '{gsub("/download",""); print}') | gawk -F'/|"|\\\' '/discussionUrl/ {print $12}')
            MBCODE="$THREADNAME"
            checksrb2mb

            for f in $FILEURL; do

                IDCODE=$(curl -X GET -LIs "$f" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')
                if [ -z "$(printf "%s\n" "$IDCODE")" ]; then

                    FILECODE=$(curl -sL "$f")
                    FILENAME=$(printf "%s\n$FILENAME" "$(printf "%s\n" "$FILECODE" | gawk -F'">|<' '/contentRow-title/ {print $3}')")
                    FILECODELIST="$FILECODE
$FILECODELIST"

                else

                    FILELISTTMP="$f"
                    FILELIST="$FILELISTTMP
$FILELIST"
                    FILELIST=$(printf "%s\n" "$FILELIST" | gawk 'NF {print}')

                    FILELISTNAMETMP=$(printf "%s\n" "$IDCODE")
                    FILELISTNAME="$FILELISTNAMETMP
$FILELISTNAME"
                    FILELISTNAME=$(printf "%s\n" "$FILELISTNAME" | gawk 'NF {print}')
                    FILELISTCODE=$(curl -X GET -LIs "$FILELISTTMP")

                    FILELISTCODE=$(curl -X GET -LIs "$FILELISTTMP")
                    THREADLIST="$THREADNAME $(printf "%s\n" "$FILELISTCODE" | gawk -F'Content-Length: ' '{IGNORECASE=1} /Content-Length:/ {gsub("\r",""); print $NF}' | tail -n1) $FILELISTTMP \"$(printf "%s\n" "$FILELISTCODE" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')\""
                    DIRECTORY="$DIRECTORYTMP"

                    clear
                    ID=1 dlanother

                fi

            done

        fi

        if [ -n "$FILENAME" ] || [ "$ID" = 1 ]; then

            $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose file by typing number and then pressing enter. Press enter or ctrl+c to quit."
            if [ -z "$arrayfile" ] && [ -z "$arrayfilename" ]; then

                arrayfile=$(printf "%s\nDone" "$(printf "%s\n" "$FILECODELIST" | gawk -F'<a href="|" class=' '/version/ {print $2}' | gawk 'NF{print "https://mb.srb2.org/"$0}')")
                arrayfilename=$(printf "%s\n$DONE" "$FILENAME")

            else

                arrayfile="$arrayfile"
                arrayfilename="$arrayfilename"

            fi

            count=$(printf "%s\n" "$arrayfile" | wc -l)
            n=""
            $PRINTF "%s\n" "$arrayfilename" | gawk '{print NR")", $0}'
            while true; do

                $PRINTF "$PROMPT%s\e[0m" "#? "
                read -r n

                if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                    OPTFILE=$(printf "%s\n" "$arrayfile" | gawk NR=="${n}")
                    OPTFILENAME=$(printf "%s\n" "$arrayfilename" | gawk NR=="${n}")
                    FILELISTTMP="$OPTFILE"
                    FILELIST="$FILELISTTMP
$FILELIST"
                    FILELIST=$(printf "%s\n" "$FILELIST" | gawk 'NF && !/Done/ {print}')

                    FILELISTNAMETMP="$OPTFILENAME"
                    FILELISTNAME="$FILELISTNAME
$FILELISTNAMETMP"
                    FILELISTNAME=$(printf "%s\n" "$FILELISTNAME" | gawk 'NF && !/Done/ {print}')

                    if [ "$OPTFILE" = "Done" ]; then

                        dl

                    else

                        FILELISTCODE=$(curl -X GET -LIs "$FILELISTTMP")
                        THREADLIST="$THREADLIST
$THREADNAME $(printf "%s\n" "$FILELISTCODE" | gawk -F'Content-Length: ' '{IGNORECASE=1} /Content-Length:/ {gsub("\r",""); print $NF}' | tail -n1) $FILELISTTMP \"$(printf "%s\n" "$FILELISTCODE" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')\""

                        clear
                        ID=1 dlanother

                    fi

                else

                    $PRINTF "$NOTICE\n%s\n\e[0m" "No option has been chosen."
                    exit

                fi

            done

        else

            dl

        fi

        exit
        ;;

    -o | --old)

        PAGE=$((OLDPAGE + 1))
        NEXT="\033[1m\033[34mNext Page $((PAGE + 1))\033[0m"
        PREV="\033[1m\033[34mPrevious Page $((PAGE - 1))\033[0m"
        BACK2CAT="\033[1m\033[34mBack to categories\033[0m"
        BACK2ADDON="\033[1m\033[34mBack to addons\033[0m"
        DONE="\033[1m\033[34mDone\033[0m"

        if [ "$REUSABLE" = 1 ]; then

            REUSABLEID="&prefix_id=24"

        fi

        if [ "$SRB2DLAUTODIR" != 1 ] && [ -z "$DIRECTORY" ] && [ "$REUSABLE" != 1 ]; then

            if [ -z "$2" ]; then

                export DIRECTORYTMP="$(pwd)"

            else

                export DIRECTORYTMP="$(printf "%s\n" "$*" | gawk '{print $NF}')"

            fi

        elif [ "$SRB2DLAUTODIR" != 1 ] && [ -z "$DIRECTORY" ] && [ "$REUSABLE" = 1 ]; then

            if [ -z "$3" ]; then

                export DIRECTORYTMP="$(pwd)"

            else

                export DIRECTORYTMP="$(printf "%s\n" "$*" | gawk '{print $NF}')"

            fi

        fi

        if [ -z "$OLD" ]; then

            # Choose categories for old versions of SRB2/SRB2Kart resources.
            PAGECODE=$(curl -Ls "https://mb.srb2.org")
            MBCODE="$PAGECODE"
            clear
            checksrb2mb
            srb2oldlogo

            arraypage=$(printf "%s\nSRB2-2.1\nSRB2-2.1-Legacy\nSRB2Archive" "$(printf "%s\n" "$PAGECODE" | gawk -F'href="|"' '/\/forums\/outdated-releases/ {print $2}')")
            arraypagename=$(printf "%s\nSRB2 2.1 Builds and Source Code\nSRB2 2.1 Legacy Builds and Source Code\nSRB/SRB2 Archived Versions" "$(printf "%s\n" "$PAGECODE" | gawk -F'<a href="/forums/*.*/" data-xf-init="element-tooltip" data-shortcut="node-description">|</a>' '/Obsoleted *.* Releases \([0-9]*.*\)|Outdated *.* Releases \([0-9]*.*\)/ {gsub("&amp;","\\&"); print $2}' | gawk 'NF{print}')")
            count="$(printf "%s\n" "$arraypage" | wc -l)"
            n=""
            $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose SRB2 version by typing number and then pressing enter. Press enter or ctrl+c to quit."
            $PRINTF "%s\n" "$arraypagename" | gawk '{print NR")", $0}'
            while true; do

                $PRINTF "$PROMPT%s\e[0m" "#? "
                read -r n

                if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                    OPTURL=$(printf "%s\n" "$arraypage" | gawk NR=="${n}")
                    OLDURL="$OPTURL"
                    break

                else

                    $PRINTF "$NOTICE\n%s\n\e[0m" "No SRB2 version has been chosen."
                    exit

                fi

            done

        fi

        if [ -z "$OLD2" ]; then

            clear

            if [ -n "$(printf "%s\n" "$OLDURL" | gawk '/obsoleted|outdated-releases-0-x-1-x.53/')" ]; then

                PAGECODE=$(curl -Ls "https://mb.srb2.org$OLDURL?page=$PAGE")
                USERS=$(printf "%s\n" "$PAGECODE" | gawk -F'data-author="|">' '/data-author="/ {gsub("&#039;","\47") || gsub("&amp;","\\&") || gsub("&quot;","\"") || gsub("^.$",""); print $2}')
                arraypage=$(printf "%s\nPrev\nNext\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F '<a href="|"' '/<a href="*.*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url="*.*">/ {print $2}')")
                arraypagenametmp=$(printf "%s\n" "$(printf "%s\n" "$PAGECODE" | gawk -F'<a href="*.*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url="*.*">|</a>' '/<a href="*.*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url="*.*">/ {gsub("&#039;","\47"); gsub("&amp;","\\&"); gsub("&quot;","\""); gsub("^.$",""); print "\033[1m"$2"\033[0m"}')")
                arraypagename=$(printf "%s\n$PREV\n$NEXT\n$BACK2CAT\n$DONE" "$(
                    gawk -v left="$arraypagenametmp" -v right="$USERS" 'BEGIN{
split(left,l,/\n/)
split(right,r,/\n/)
for (i = 1; i in l; i++)
{print l[i] " - " "\033[37mUser: "r[i]"\033[0m"}}'
                )")

                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose resource by typing number and then pressing enter. Press enter or ctrl+c to quit."

            elif [ "$OPTURL" = "SRB2-2.1" ]; then

                DIRECTORY="$DIRECTORYTMP
$DIRECTORY"
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE="" OLDURL="SRB2-2.1" OLD=1 OLD2=1 OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

            elif [ "$OPTURL" = "SRB2-2.1-Legacy" ]; then

                DIRECTORY="$DIRECTORYTMP
$DIRECTORY"
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE="" OLDURL="SRB2-2.1-Legacy" OLD=1 OLD2=1 OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

            elif [ "$OPTURL" = "SRB2Archive" ]; then

                DIRECTORY="$DIRECTORYTMP
$DIRECTORY"
                FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE="" OLDURL="SRB2Archive" OLD=1 OLD2=1 OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

            else

                PAGECODE=$(curl -Ls "https://mb.srb2.org$OLDURL?page=$PAGE"$REUSABLEID"")
                arraypage=$(printf "%s\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F'<a href="|"' '/<a href="*.*" data-xf-init="element-tooltip" data-shortcut="node-description">/ && !/Contest/ {print $2}')")
                arraypagename=$(printf "%s\n$BACK2CAT\n$DONE" "$(printf "%s\n" "$PAGECODE" | gawk -F'<a href="*.*" data-xf-init="element-tooltip" data-shortcut="node-description">|</a>' '/<a href="*.*" data-xf-init="element-tooltip" data-shortcut="node-description">/ && !/Contest/ {print $2}')")
                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose category by typing number and then pressing enter. Press enter or ctrl+c to quit."

            fi

            BACK2ADDONURL="$OLDURL"
            count="$(printf "%s\n" "$arraypage" | wc -l)"
            n=""
            $PRINTF "%s\n" "$arraypagename" | gawk '{print NR")", $0}'
            while true; do

                $PRINTF "$PROMPT%s\e[0m" "#? "
                read -r n

                if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                    OPTURL=$(printf "%s\n" "$arraypage" | gawk NR=="${n}")

                    if [ "$OPTURL" = "Next" ] || [ "$OPTURL" = "Prev" ]; then

                        OLDURL="$OLDURL"

                    else

                        OLDURL="$OPTURL"

                    fi

                    if [ "$OPTURL" = "Next" ]; then

                        PAGECODE=$(curl -Ls "https://mb.srb2.org$OLDURL?page=$((PAGE + 1))"$REUSABLEID"")
                        arraynextpage=$(printf "%s\nPrev\nNext\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F '<a href="|"' '/<a href="*.*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url="*.*">/ {print $2}')")

                        if [ "$arraynextpage" != "$arraypage" ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE="$PAGE" OLDURL="$OLDURL" OLD=1 OLD2="" OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$OLDURL" OLD=1 OLD2="" OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        fi

                    elif [ "$OPTURL" = "Prev" ]; then

                        PAGECODE=$(curl -Ls "https://mb.srb2.org$OLDURL?page=$((PAGE - 2))"$REUSABLEID"")
                        arrayprevpage=$(printf "%s\nPrev\nNext\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F '<a href="|"' '/<a href="*.*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url="*.*">/ {print $2}')")

                        if [ "$arrayprevpage" = "$arraypage" ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$OLDURL" OLD=1 OLD2="" OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 2)) OLDURL="$OLDURL" OLD=1 OLD2="" OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        fi

                    elif [ "$OPTURL" = "Back2Cat" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE="" OLDURL="" OLD="" OLD2="" OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                    elif [ "$OPTURL" = "Done" ]; then

                        dl

                    elif [ "$OPTURL" != "Next" ] || [ "$OPTURL" != "Prev" ] || [ "$OPTURL" != "Back2Cat" ]; then

                        break

                    fi

                else

                    $PRINTF "$NOTICE\n%s\n\e[0m" "No resource has been chosen."
                    exit

                fi

            done

        fi

        if [ -z "$OLD3" ]; then

            clear

            if [ -n "$(printf "%s\n" "$OLDURL" | gawk '/forums/')" ]; then

                PAGECODE=$(curl -Ls "https://mb.srb2.org$OLDURL?page=$PAGE"$REUSABLEID"")
                USERS=$(printf "%s\n" "$PAGECODE" | gawk -F'data-author="|">' '/data-author="/ {gsub("&#039;","\47") || gsub("&amp;","\\&") || gsub("&quot;","\"") || gsub("^.$",""); print $2}')
                arraypage=$(printf "%s\nPrev\nNext\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F '<a href="|"' '/<a href="*.*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url="*.*">/ {print $2}')")
                arraypagenametmp=$(printf "%s\n" "$(printf "%s\n" "$PAGECODE" | gawk -F'<a href=".*" class="labelLink" rel="nofollow"><span class="label label--primary" dir="auto">|<a href=".*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url=".*">|</span><span class="label-append">&nbsp;|</a>|</span></a>' '/<a href="*.*" class="labelLink" rel="nofollow"><span class="label label--primary" dir="auto">/ || /<a href="*.*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url="*.*">/ {gsub("&#039;","\47"); gsub("&amp;","\\&"); gsub("&quot;","\""); gsub("^.$",""); print "\033[1m"$2"\033[0m"}' | gawk '/\[Open Assets\]/ {getline t; print "\033[7;34m"$0"\033[0m",t; next}1')")
                arraypagename=$(printf "%s\n$PREV\n$NEXT\n$BACK2CAT\n$DONE" "$(
                    gawk -v left="$arraypagenametmp" -v right="$USERS" 'BEGIN{
split(left,l,/\n/)
split(right,r,/\n/)
for (i = 1; i in l; i++)
{print l[i] " - " "\033[37mUser: "r[i]"\033[0m"}}'
                )")

                count="$(printf "%s\n" "$arraypage" | wc -l)"
                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose resource by typing number and then pressing enter. Press enter or ctrl+c to quit."
                $PRINTF "%s\n" "$arraypagename" | gawk '{print NR")", $0}'

            elif [ -n "$(printf "%s\n" "$OLDURL" | gawk '/threads/')" ] || [ "$OLDURL" = "SRB2-2.1" ] || [ "$OLDURL" = "SRB2-2.1-Legacy" ] || [ "$OLDURL" = "SRB2Archive" ]; then

                if [ -z "$(printf "%s\n" "$arrayfile")" ]; then

                    # Browser's behaviour depends on set SRB2DLPREVIEW.
                    if [ "$SRB2DLPREVIEW" = 1 ] && [ "$OLDURL" != "SRB2-2.1" ] && [ "$OLDURL" != "SRB2-2.1-Legacy" ] && [ "$OLDURL" != "SRB2Archive" ]; then

                        if [ -n "$BROWSER" ]; then

                            $PRINTF "$MESSAGE%s\n\n\e[0m" "Opening link to files."
                            $BROWSER "https://mb.srb2.org/$OPTURL" > /dev/null &

                        elif [ -x "/usr/bin/w3m" ]; then

                            w3m "https://mb.srb2.org/$OPTURL"

                        fi

                    fi

                    if [ "$OLDURL" = "SRB2-2.1" ]; then

                        SRB2OLD21=$(curl -s "https://api.github.com/repos/STJr/SRB2/releases/19358575" | gawk -F'"' '/browser_download_url.*zip/ || /browser_download_url.*exe/ || /browser_download_url.*dmg/ {print $4}')
                        SOURCECODEZIP="https://api.github.com/repos/stjr/srb2/zipball/SRB2_release_2.1.25"
                        SOURCECODETAR="https://api.github.com/repos/stjr/srb2/tarball/SRB2_release_2.1.25"
                        arrayattachment=$(printf "%s\n$SOURCECODEZIP\n$SOURCECODETAR" "$SRB2OLD21")
                        arrayattachmentname=$(printf "%s\nSRB2 2.1 Source Code (zip)\nSRB2 2.1 Source Code (tar.gz)" "$(printf "%s\n" "$SRB2OLD21" | gawk -F'/' '{print $NF}')")

                    elif [ "$OLDURL" = "SRB2-2.1-Legacy" ]; then

                        SOURCECODEZIP="https://api.github.com/repos/PandaSRC/srb2-legacy/zipball"
                        SOURCECODETAR="https://api.github.com/repos/PandaSRC/srb2-legacy/tarball"
                        arrayattachment=$(printf "$SOURCECODEZIP\n$SOURCECODETAR")
                        arrayattachmentname=$(printf "SRB2 2.1 Legacy Source Code (zip)\nSRB2 2.1 Legacy Source Code (tar.gz)")

                    elif [ "$OLDURL" = "SRB2Archive" ]; then

                        ATTACHMENTCODE=$(curl -Ls "https://files.srb2.org/srb2.org/history")
                        arrayattachment=$(printf "%s\n" "$ATTACHMENTCODE" | gawk -F'">|</a>' '(/.zip/ || /.exe/) && !/&gt;/ {print $3}')
                        arrayattachmentname=$(printf "%s\n" "$ATTACHMENTCODE" | gawk -F'">|</a>' '(/.zip/ || /.exe/) && !/&gt;/ {print $3}')

                    else

                        ATTACHMENTCODE=$(curl -Ls "https://mb.srb2.org$OLDURL")
                        MBCODE="$ATTACHMENTCODE"
                        checksrb2mb

                        arrayattachment=$(printf "%s\n" "$ATTACHMENTCODE" | gawk -F'href="|"' '/attachments/ && (/.zip/ || /.7z/ || /.rar/ || /.pk3/ || /.wad/ || /.lua/ || /.exe/ || /.soc/ || /.ZIP/ || /.7Z/ || /.RAR/ || /.PK3/ || /.WAD/ || /.LUA/ || /.EXE/ || /.SOC/) && NF {print $4}' | gawk -F'/' '{print $2"/"$3}' | gawk '!/^\/$/ {print}')
                        arrayattachmentname=$(printf "%s\n" "$ATTACHMENTCODE" | gawk -F'">|</span>' '/title/ {split($2,a,"<"); print a[1]}' | gawk '(/.zip$/ || /.7z$/ || /.rar$/ || /.pk3$/ || /.wad$/ || /.lua$/ || /.exe$/ || /.soc$/ || /.ZIP$/ || /.7Z$/ || /.RAR$/ || /.PK3$/ || /.WAD$/ || /.LUA$/ || /.EXE$/ || /.SOC$/) && NF {gsub("&#039;","\47"); gsub("&amp;","\\&"); gsub("&quot;","\""); gsub("^.$",""); print}')

                    fi

                    if [ -n "$arrayattachment" ] && ([ "$OLDURL" = "SRB2-2.1" ] || [ "$OLDURL" = "SRB2-2.1-Legacy" ] || [ "$OLDURL" = "SRB2Archive" ]); then

                        arrayfile=$(printf "%s\nBack2Cat\nDone" "$arrayattachment")
                        arrayfilename=$(printf "%s\n$BACK2CAT\n$DONE" "$arrayattachmentname")

                    elif [ -n "$arrayattachment" ]; then

                        arrayfile=$(printf "%s\nBack2Addon\nBack2Cat\nDone" "$arrayattachment")
                        arrayfilename=$(printf "%s\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$arrayattachmentname")

                    else

                        arrayfile=$(printf "Back2Addon\nBack2Cat\nDone")
                        arrayfilename=$(printf "$BACK2ADDON\n$BACK2CAT\n$DONE")

                    fi

                else

                    arrayfile="$arrayfile"
                    arrayfilename="$arrayfilename"

                fi

                count="$(printf "%s\n" "$arrayfile" | wc -l)"
                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose file by typing number and then pressing enter. Press enter or ctrl+c to quit."
                $PRINTF "%s\n" "$arrayfilename" | gawk '{print NR")", $0}'

            fi

            BACK2ADDONURL2="$OLDURL"
            n=""
            while true; do

                $PRINTF "$PROMPT%s\e[0m" "#? "
                read -r n

                if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                    if [ -n "$arrayfile" ]; then

                        OPTURL=$(printf "%s\n" "$arrayfile" | gawk NR=="${n}")

                    else

                        OPTURL=$(printf "%s\n" "$arraypage" | gawk NR=="${n}")

                    fi

                    if [ -n "$(printf "%s\n" "$arrayfile")" ]; then

                        if [ "$OPTURL" = "Back2Cat" ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE="" OLDURL="" OLD="" OLD2="" OLD3="" arrayfile="" arrayfilename="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        elif [ "$OPTURL" = "Back2Addon" ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$BACK2ADDONURL" OLD=1 OLD2="" OLD3="" arrayfile="" arrayfilename="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        elif [ "$OPTURL" = "Done" ]; then

                            dl

                        elif [ "$OPTURL" != "Back2Cat" ] || [ "$OPTURL" != "Back2Addon" ]; then

                            OPTFILE=$(printf "%s\n" "$arrayfile" | gawk NR=="${n}")
                            OPTFILENAME=$(printf "%s\n" "$arrayfilename" | gawk NR=="${n}")

                            if [ "$OLDURL" = "SRB2-2.1" ] || [ "$OLDURL" = "SRB2-2.1-Legacy" ]; then

                                FILELISTTMP="$OPTFILE"

                            elif [ "$OLDURL" = "SRB2Archive" ]; then

                                FILELISTTMP="https://files.srb2.org/srb2.org/history/$OPTFILE"

                            else

                                FILELISTTMP="https://mb.srb2.org/$OPTFILE"

                            fi

                            FILELIST="$FILELIST
$FILELISTTMP"
                            FILELIST=$(printf "%s\n" "$FILELIST" | gawk 'NF {print}')
                            FILELISTNAMETMP="$OPTFILENAME"
                            FILELISTNAME="$FILELISTNAME
$FILELISTNAMETMP"
                            FILELISTNAME=$(printf "%s\n" "$FILELISTNAME" | gawk 'NF {print}')

                            OPTURLTHREAD="$OLDURL"

                            if [ -n "$(printf "%s\n" "$OLDURL" | gawk '/obsoleted|outdated-releases-0-x-1-x.53/')" ]; then

                                THREADNAME=$(printf "%s\n" "$OPTURLTHREAD" | gawk -F'/' '{print $3}')
                                FILELISTCODE=$(curl -X GET -LIs "$FILELISTTMP")
                                THREADLIST="$THREADLIST
$THREADNAME $(printf "%s\n" "$FILELISTCODE" | gawk -F'Content-Length: ' '{IGNORECASE=1} /Content-Length:/ {gsub("\r",""); print $NF}' | tail -n1) $FILELISTTMP \"$(printf "%s\n" "$FILELISTCODE" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')\""

                            fi

                            OLD=1 OLD2=1 dlanother

                        fi

                    elif [ "$OPTURL" = "Next" ]; then

                        PAGECODE=$(curl -Ls "https://mb.srb2.org$OLDURL?page=$((PAGE + 1))"$REUSABLEID"")
                        arraynextpage=$(printf "%s\nPrev\nNext\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F '<a href="|"' '/<a href="*.*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url="*.*">/ {print $2}')")

                        if [ "$arraynextpage" != "$arraypage" ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE="$PAGE" OLDURL="$OLDURL" OLD=1 OLD2=1 OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$OLDURL" OLD=1 OLD2=1 OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        fi

                    elif [ "$OPTURL" = "Prev" ]; then

                        PAGECODE=$(curl -Ls "https://mb.srb2.org$OLDURL?page=$((PAGE - 2))"$REUSABLEID"")
                        arrayprevpage=$(printf "%s\nPrev\nNext\nBack2Cat\nDone" "$(printf "%s\n" "$PAGECODE" | gawk -F '<a href="|"' '/<a href="*.*" class="" data-tp-primary="on" data-xf-init="preview-tooltip" data-preview-url="*.*">/ {print $2}')")

                        if [ "$arrayprevpage" = "$arraypage" ]; then

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$OLDURL" OLD=1 OLD2=1 OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        else

                            FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 2)) OLDURL="$OLDURL" OLD=1 OLD2=1 OLD3="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                        fi

                    elif [ "$OPTURL" = "Back2Cat" ]; then

                        FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE="" OLDURL="" OLD="" OLD2="" OLD3="" arrayfile="" arrayfilename="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                    elif [ "$OPTURL" = "Done" ]; then

                        dl

                    elif [ "$OPTURL" != "Next" ] || [ "$OPTURL" != "Prev" ] || [ "$OPTURL" != "Back2Cat" ]; then

                        break

                    fi

                else

                    $PRINTF "$NOTICE\n%s\n\e[0m" "No file has been chosen."
                    exit

                fi

            done

        fi

        if [ -z "$(printf "%s\n" "$arrayfile")" ]; then

            clear

            if [ "$SRB2DLPREVIEW" = 1 ]; then

                # Browser's behaviour depends on set SRB2DLPREVIEW.
                if [ -n "$BROWSER" ]; then

                    $PRINTF "$MESSAGE%s\n\n\e[0m" "Opening link to files."
                    $BROWSER "https://mb.srb2.org/$OPTURL" > /dev/null &

                elif [ -x "/usr/bin/w3m" ]; then

                    w3m "https://mb.srb2.org/$OPTURL"

                fi

            fi

            OLDURL="$OPTURL"
            ATTACHMENTCODE=$(curl -Ls "https://mb.srb2.org$OLDURL")
            arrayattachment=$(printf "%s\n" "$ATTACHMENTCODE" | gawk -F'href="|"' '/attachments/ && (/.zip/ || /.7z/ || /.rar/ || /.pk3/ || /.wad/ || /.lua/ || /.exe/ || /.soc/ || /.ZIP/ || /.7Z/ || /.RAR/ || /.PK3/ || /.WAD/ || /.LUA/ || /.EXE/ || /.SOC/) && NF {print $4}' | gawk -F'/' '{print $2"/"$3}' | gawk '!/^\/$/ {print}')
            arrayattachmentname=$(printf "%s\n" "$ATTACHMENTCODE" | gawk -F'">|</span>' '/title/ {split($2,a,"<"); print a[1]}' | gawk '(/.zip$/ || /.7z$/ || /.rar$/ || /.pk3$/ || /.wad$/ || /.lua$/ || /.exe$/ || /.soc$/ || /.ZIP$/ || /.7Z$/ || /.RAR$/ || /.PK3$/ || /.WAD$/ || /.LUA$/ || /.EXE$/ || /.SOC$/) && NF {gsub("&#039;","\47"); gsub("&amp;","\\&"); gsub("&quot;","\""); gsub("^.$",""); print}')

            if [ -n "$arrayattachment" ]; then

                arrayfile=$(printf "%s\nBack2Addon\nBack2Cat\nDone" "$arrayattachment")
                arrayfilename=$(printf "%s\n$BACK2ADDON\n$BACK2CAT\n$DONE" "$arrayattachmentname")

            else

                arrayfile=$(printf "Back2Addon\nBack2Cat\nDone")
                arrayfilename=$(printf "$BACK2ADDON\n$BACK2CAT\n$DONE")

            fi

        else

            arrayfile="$arrayfile"
            arrayfilename="$arrayfilename"

        fi

        count="$(printf "%s\n" "$arrayfile" | wc -l)"
        n=""
        clear
        $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose file by typing number and then pressing enter. Press enter or ctrl+c to quit."
        $PRINTF "%s\n" "$arrayfilename" | gawk '{print NR")", $0}'
        while true; do

            $PRINTF "$PROMPT%s\e[0m" "#? "
            read -r n

            if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                OPTURL=$(printf "%s\n" "$arrayfile" | gawk NR=="${n}")

                if [ "$OPTURL" = "Back2Cat" ]; then

                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE="" OLDURL="" OLD="" OLD2="" OLD3="" arrayfile="" arrayfilename="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                elif [ "$OPTURL" = "Back2Addon" ]; then

                    FILELIST="$FILELIST" FILELISTNAME="$FILELISTNAME" DIRECTORY="$DIRECTORY" OLDPAGE=$((PAGE - 1)) OLDURL="$BACK2ADDONURL2" OLD=1 OLD2=1 OLD3="" arrayfile="" arrayfilename="" FILES=0 REUSABLE="$REUSABLE" exec "$0" --old

                elif [ "$OPTURL" = "Done" ]; then

                    dl

                elif [ "$OPTURL" != "Back2Cat" ] || [ "$OPTURL" != "Back2Addon" ]; then

                    OPTFILE=$(printf "%s\n" "$arrayfile" | gawk NR=="${n}")
                    OPTFILENAME=$(printf "%s\n" "$arrayfilename" | gawk NR=="${n}")
                    FILELISTTMP="https://mb.srb2.org/$OPTFILE"
                    FILELIST="$FILELIST
$FILELISTTMP"
                    FILELIST=$(printf "%s\n" "$FILELIST" | gawk 'NF {print}')
                    FILELISTNAMETMP="$OPTFILENAME"
                    FILELISTNAME="$FILELISTNAME
$FILELISTNAMETMP"
                    FILELISTNAME=$(printf "%s\n" "$FILELISTNAME" | gawk 'NF {print}')

                    OPTURLTHREAD="$OLDURL"
                    THREADNAME=$(printf "%s\n" "$OPTURLTHREAD" | gawk -F'/' '{print $3}')
                    FILELISTCODE=$(curl -X GET -LIs "$FILELISTTMP")
                    THREADLIST="$THREADLIST
$THREADNAME $(printf "%s\n" "$FILELISTCODE" | gawk -F'Content-Length: ' '{IGNORECASE=1} /Content-Length:/ {gsub("\r",""); print $NF}' | tail -n1) $FILELISTTMP \"$(printf "%s\n" "$FILELISTCODE" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')\""

                    OLD=1 OLD2=1 OLD3=1 dlanother

                fi
                break

            else

                $PRINTF "$NOTICE\n%s\n\e[0m" "No file has been chosen."
                exit

            fi

        done
        ;;

    -r | --reusable)

        # Reusable variable for various other script's options.
        REUSABLE=1
        ;;

    -s | --search)

        # Make variables to be remembered after rerunning script with "exec $0".
        if [ "$SEARCH" = 1 ] && [ "$FILES" = 1 ] && [ -n "$SEARCHURL" ]; then

            SEARCH=1
            FILES=1
            SEARCHURL="$SEARCHURL"

        else

            SEARCH=1
            FILES=0
            SEARCHURL="$SEARCHURL"

        fi

        if ([ "$SEARCH" = 1 ] && [ "$FILES" = 1 ] && [ -n "$SEARCHURL" ]) || ([ "$SEARCH" = 1 ] && [ "$FILES" = 0 ] && [ -n "$SEARCHURL" ]); then

            SEARCHPAGE=$((SEARCHPAGE + 1))
            PAGE="$SEARCHPAGE" choosepage
            dlanother

        elif [ "$SEARCH" = 1 ] && [ "$FILES" = 0 ] && [ -z "$SEARCHURL" ]; then

            if [ -n "$2" ]; then

                if [ "$2" = "-r" ] || [ "$2" = "--reusable" ]; then

                    $PRINTF "$NOTICE\n%s\n\e[0m" "No specified search query. No option has been chosen.."
                    exit

                fi

                if [ "$(printf "%s\n" "$*" | gawk '{print $((NF - 1))}')" = "-r" ] || [ "$(printf "%s\n" "$*" | gawk '{print $((NF - 1))}')" = "--reusable" ]; then

                    REUSABLE=1
                    shift
                    OPTS="$*"
                    SEARCHQUERY=$(printf "%s\n" "$OPTS" | gawk 'gsub(/-r|--reusable/,"")')
                    SEARCHQUERY="${SEARCHQUERY% *}"

                    if [ "$SRB2DLAUTODIR" != 1 ]; then

                        export DIRECTORYTMP="${OPTS##* }"

                    fi

                elif [ "$(printf "%s\n" "$*" | gawk '{print $NF}')" = "-r" ] || [ "$(printf "%s\n" "$*" | gawk '{print $NF}')" = "--reusable" ]; then

                    REUSABLE=1
                    shift
                    OPTS="$*"
                    SEARCHQUERY="${OPTS% *}"

                    if [ "$SRB2DLAUTODIR" != 1 ]; then

                        export DIRECTORYTMP=$(pwd)

                    fi

                else

                    shift
                    OPTS="$*"
                    ENDARG=$(printf "%s\n" "$OPTS" | gawk 'match($NF, /\//) {print substr($NF, RSTART, RLENGTH)}')

                    if [ "$ENDARG" = "/" ]; then

                        SEARCHQUERY="${OPTS% *}"

                        if [ "$SRB2DLAUTODIR" != 1 ]; then

                            export DIRECTORYTMP="${OPTS##* }"

                        fi

                    else

                        SEARCHQUERY="$*"

                        if [ "$SRB2DLAUTODIR" != 1 ]; then

                            export DIRECTORYTMP=$(pwd)

                        fi

                    fi

                fi

            else

                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please enter resource to search."
                read -r SEARCHQUERY

            fi

            # Search resource functionality.
            WEBKITRANDOM=$(date | md5sum | gawk '{print substr($1,length($1)-14)}')
            SEARCHCOOKIES=$(curl -is https://mb.srb2.org/search | gawk -F'=|"|;' '/xf2_csrf|xfToken/ {gsub(/^[\t]+/,""); print $2$9}' | gawk 'NF{print}')
            XF_CSRF=$(printf "%s\n" "xf2_csrf=$SEARCHCOOKIES" | head -n1)
            XFTOKEN=$(printf "%s\n" "$SEARCHCOOKIES" | head -n1)
            SEARCHFORM="$(printf '%b_' '------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="keywords"\r\n\r\n'"$SEARCHQUERY"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[users]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[newer_than]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[older_than]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[prefixes][]"\r\n\r\n'"$REUSABLE"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[categories][]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[child_categories]"\r\n\r\n1\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="order"\r\n\r\ndate\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="search_type"\r\n\r\nresource\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfToken"\r\n\r\n'"$XFTOKEN"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfRequestUri"\r\n\r\n/search/?type=resource\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfWithData"\r\n\r\n1\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfToken"\r\n\r\n'"$XFTOKEN"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfResponseType"\r\n\r\njson\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'--\r\n')"
            SEARCHFORM="${SEARCHFORM%_}"
            SEARCHURL=$(curl -s 'https://mb.srb2.org/search/search' -X POST -H 'accept: application/json, text/javascript' -H 'Sec-Fetch-Dest: empty' -H 'Sec-Fetch-Mode: cors' -H 'Sec-Fetch-Site: same-origin' -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary'"$WEBKITRANDOM"'' -H 'cookie: '"$XF_CSRF"'' --data-binary "$SEARCHFORM" --compressed | gawk -F'"' '/redirect/ {print $4}' | gawk '{gsub(/\[/,"\\["); gsub(/\]/,"\\]"); print}')

            MBCODE="$SEARCHCOOKIES"
            checksrb2mb

            SEARCHPAGE=$((SEARCHPAGE + 1))
            PAGE="$SEARCHPAGE" SEARCHURL="$SEARCHURL" choosepage
            dlanother

        fi
        ;;

    -u | --search-user)

        if [ "$SEARCH" = 1 ] && [ "$FILES" = 1 ] && [ -n "$SEARCHURL" ]; then

            SEARCH=1
            FILES=1
            SEARCHURL="$SEARCHURL"

        else

            SEARCH=1
            FILES=0
            SEARCHURL="$SEARCHURL"

        fi

        if ([ "$SEARCH" = 1 ] && [ "$FILES" = 1 ] && [ -n "$SEARCHURL" ]) || ([ "$SEARCH" = 1 ] && [ "$FILES" = 0 ] && [ -n "$SEARCHURL" ]); then

            SEARCHPAGE=$((SEARCHPAGE + 1))
            PAGE="$SEARCHPAGE" choosepage
            dlanother

        elif [ "$SEARCH" = 1 ] && [ "$FILES" = 0 ] && [ -z "$SEARCHURL" ]; then

            if [ -n "$2" ]; then

                if [ "$2" = "-r" ] || [ "$2" = "--reusable" ]; then

                    $PRINTF "$NOTICE\n%s\n\e[0m" "No specified search query. No option has been chosen.."
                    exit

                fi

                # Checks to make sure --reusable option does not become part of search query.
                if [ "$(printf "%s\n" "$*" | gawk '{print $((NF - 1))}')" = "-r" ] || [ "$(printf "%s\n" "$*" | gawk '{print $((NF - 1))}')" = "--reusable" ]; then

                    REUSABLE=1
                    shift
                    OPTS="$*"
                    SEARCHQUERYUSER=$(printf "%s\n" "$OPTS" | gawk 'gsub(/-r|--reusable/,"")')
                    SEARCHQUERYUSER="${SEARCHQUERYUSER% *}"

                    if [ "$SRB2DLAUTODIR" != 1 ]; then

                        export DIRECTORYTMP="${OPTS##* }"

                    fi

                elif [ "$(printf "%s\n" "$*" | gawk '{print $NF}')" = "-r" ] || [ "$(printf "%s\n" "$*" | gawk '{print $NF}')" = "--reusable" ]; then

                    REUSABLE=1
                    shift
                    OPTS="$*"
                    SEARCHQUERYUSER="${OPTS% *}"

                    if [ "$SRB2DLAUTODIR" != 1 ]; then

                        export DIRECTORYTMP=$(pwd)

                    fi

                else

                    shift
                    OPTS="$*"
                    ENDARG=$(printf "%s\n" "$OPTS" | gawk 'match($NF, /\//) {print substr($NF, RSTART, RLENGTH)}')

                    if [ "$ENDARG" = "/" ]; then

                        SEARCHQUERYUSER="${OPTS% *}"

                        if [ "$SRB2DLAUTODIR" != 1 ]; then

                            export DIRECTORYTMP="${OPTS##* }"

                        fi

                    else

                        SEARCHQUERYUSER="$*"

                        if [ "$SRB2DLAUTODIR" != 1 ]; then

                            export DIRECTORYTMP=$(pwd)

                        fi

                    fi

                fi

            else

                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please enter resource to search."
                read -r SEARCHQUERYUSER

            fi

            # Search user functionality.
            WEBKITRANDOM=$(date | md5sum | gawk '{print substr($1,length($1)-14)}')
            SEARCHCOOKIES=$(curl -is https://mb.srb2.org/search | gawk -F'=|"|;' '/xf2_csrf|xfToken/ {gsub(/^[\t]+/,""); print $2$9}' | gawk 'NF{print}')
            XF_CSRF=$(printf "%s\n" "xf2_csrf=$SEARCHCOOKIES" | head -n1)
            XFTOKEN=$(printf "%s\n" "$SEARCHCOOKIES" | head -n1)
            SEARCHFORM="$(printf '%b_' '------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="keywords"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[users]"\r\n\r\n'"$SEARCHQUERYUSER"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[newer_than]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[older_than]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[prefixes][]"\r\n\r\n'"$REUSABLE"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[categories][]"\r\n\r\n\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="c[child_categories]"\r\n\r\n1\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="order"\r\n\r\ndate\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="search_type"\r\n\r\nresource\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfToken"\r\n\r\n'"$XFTOKEN"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfRequestUri"\r\n\r\n/search/?type=resource\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfWithData"\r\n\r\n1\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfToken"\r\n\r\n'"$XFTOKEN"'\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'\r\nContent-Disposition: form-data; name="_xfResponseType"\r\n\r\njson\r\n------WebKitFormBoundary'"$WEBKITRANDOM"'--\r\n')"
            SEARCHFORM="${SEARCHFORM%_}"
            SEARCHURL=$(curl -s 'https://mb.srb2.org/search/search' -H 'accept: application/json, text/javascript' -H 'Sec-Fetch-Dest: empty' -H 'Sec-Fetch-Mode: cors' -H 'Sec-Fetch-Site: same-origin' -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary'"$WEBKITRANDOM"'' -H 'cookie: '"$XF_CSRF"'' --data-binary "$SEARCHFORM" --compressed | gawk -F'"' '/redirect/ {print $4}' | gawk '{gsub(/\[/,"\\["); gsub(/\]/,"\\]"); print}')

            MBCODE="$SEARCHCOOKIES"
            checksrb2mb

            SEARCHPAGE=$((SEARCHPAGE + 1))
            PAGE="$SEARCHPAGE" choosepage
            dlanother

        fi
        ;;

    -k | --kart)

        # Make variables to be remembered after rerunning script with "exec $0".
        if [ "$KARTCHARACTER" = 1 ]; then

            KARTCHARACTER=1

        elif [ "$KARTMAP" = 1 ]; then

            KARTMAP=1

        elif [ "$KARTMISC" = 1 ]; then

            KARTMISC=1

        elif [ "$KARTBUILD" = 1 ]; then

            KARTBUILD=1

        else

            KARTCHARACTER=0
            KARTMAP=0
            KARTMISC=0
            KARTBUILD=0
            FILES=0

            if [ "$SRB2DLAUTODIR" != 1 ] && [ -z "$DIRECTORY" ]; then

                if [ "$2" = "-r" ] || [ "$2" = "--reusable" ]; then

                    REUSABLE=1
                    shift

                fi

                if [ -z "$2" ]; then

                    export DIRECTORYTMP="$(pwd)"

                else

                    export DIRECTORYTMP="$2"

                fi

            fi

        fi

        if [ "$KARTCHARACTER" = 0 ] || [ "$KARTMAP" = 0 ] || [ "$KARTMISC" = 0 ] || [ "$KARTBUILD" = 0 ]; then

            # Choose SRB2 Kart category.
            while

                clear
                srb2kartlogo
                $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose category by typing number and then pressing enter. Press enter or ctrl+c to quit."
                for loop in "Kart Characters" "Kart Maps" "Kart Miscellaneous" "Kart Builds" "$($PRINTF "\033[1m\033[34m%s\033[0m" "Done")"; do $PRINTF "%s\n" "$((i += 1))) $loop"; done
                $PRINTF "$PROMPT%s\e[0m" "#? "
                read -r choose
            do

                unset i

                if [ -n "$choose" ]; then

                    case $choose in

                        "1")

                            KARTCHARACTER=1
                            break
                            ;;

                        "2")

                            KARTMAP=1
                            break
                            ;;

                        "3")

                            KARTMISC=1
                            break
                            ;;

                        "4")

                            KARTBUILD=1
                            break
                            ;;

                        "5")

                            dl

                            ;;

                    esac

                else

                    $PRINTF "$NOTICE\n%s\n\e[0m" "No category has been chosen."
                    exit

                fi

            done

        fi

        if [ "$KARTCHARACTER" = 1 ]; then

            KARTCHARACTERPAGE=$((KARTCHARACTERPAGE + 1))
            PAGE="$KARTCHARACTERPAGE" CATURL="https://mb.srb2.org/addons/categories/kart-characters.13/?page" choosepage

        elif [ "$KARTMAP" = 1 ]; then

            KARTMAPPAGE=$((KARTMAPPAGE + 1))
            PAGE="$KARTMAPPAGE" CATURL="https://mb.srb2.org/addons/categories/kart-maps.14/?page" choosepage

        elif [ "$KARTMISC" = 1 ]; then

            KARTMISCPAGE=$((KARTMISCPAGE + 1))
            PAGE="$KARTMISCPAGE" CATURL="https://mb.srb2.org/addons/categories/kart-miscellaneous.15/?page" choosepage

        elif [ "$KARTBUILD" = 1 ]; then

            KARTBUILDPAGE=$((KARTBUILDPAGE + 1))
            PAGE="$KARTBUILDPAGE" CATURL="https://mb.srb2.org/addons/categories/kart-custom-builds.16/?page" choosepage

        fi

        dlanother

        ;;

    -lu | --listurl)

        clear

        #List URL database of downloaded files.
        if [ -z "$(find "$SRB2DLROOT/srb2dl" -type f 2> /dev/null)" ]; then

            $PRINTF "$FAILURE%s\n\e[0m" "ERROR: Can't find URL database of downloaded files."
            exit

        fi

        gawk -F'.' '{print $1}' "$SRB2DLROOT/srb2dl" | sort -u
        exit

        ;;

    -ru | --removeurl)

        clear

        #Remove URL from database of downloaded files.
        if [ -z "$(find "$SRB2DLROOT/srb2dl" -type f 2> /dev/null)" ]; then

            $PRINTF "$FAILURE%s\n\e[0m" "ERROR: Can't find URL database of downloaded files."
            exit

        fi

        $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose URL by typing number and then pressing enter. Press enter or ctrl+c to quit."
        array=$(gawk '{print $1}' "$SRB2DLROOT/srb2dl" | sort -u)
        arrayname=$(gawk -F'.' '{print $1}' "$SRB2DLROOT/srb2dl" | sort -u)
        count="$(printf "%s\n" "$array" | wc -l)"
        n=""
        $PRINTF "%s\n" "$arrayname" | gawk '{print NR")", $0}'
        while true; do

            $PRINTF "$PROMPT%s\e[0m" "#? "
            read -r n

            if [ -n "$n" ] && [ "$n" -eq "$n" ] && [ "$n" -gt 0 ] && [ "$n" -le "$count" ]; then

                RMURL=$(printf "%s\n" "$array" | gawk NR=="${n}")
                gawk -i inplace '!/'$RMURL'/ {print}' "$SRB2DLROOT/srb2dl"

                break

            else

                $PRINTF "$NOTICE\n%s\n\e[0m" "No option has been chosen."
                exit

            fi

        done

        if [ -z "$(cat "$SRB2DLROOT/srb2dl")" ]; then

            rm -rf "$SRB2DLROOT/srb2dl"

        fi

        $PRINTF "$SUCCESS\n%s\n\e[0m\a" "Removing URL for $(printf "%s\n" "$RMURL" | gawk -F'.' '{print $1}') is successful."
        exit

        ;;

    -up | --upgrade)

        clear

        # Upgrade all downloaded files, that are saved in database.
        if [ -z "$(find "$SRB2DLROOT/srb2dl" -type f 2> /dev/null)" ]; then

            $PRINTF "$FAILURE%s\n\e[0m" "ERROR: Can't find URL database of downloaded files."
            exit

        fi

        if [ -z "$(cat "$SRB2DLROOT/srb2dl")" ]; then

            $PRINTF "$NOTICE%s\n\e[0m" "WARNING: Found database, but it is empty. Download resource."
            exit

        fi

        while read -r u; do

            FILETHREAD=$(printf "%s\n" "$u" | gawk '{print $1}' | gawk -F'.' '{print $2}')
            FILESIZE=$(printf "%s\n" "$u" | gawk '{print $2}')
            FILEURL=$(printf "%s\n" "$u" | gawk '{print $3}')
            FILENAME=$(printf "%s\n" "$u" | gawk -F'"' '{print $2}')
            DIRECTORY=$(printf "%s\n" "$u" | gawk -F'"' '{print $4}')
            FILETHREADCODE=$(curl -sL "https://mb.srb2.org/threads/$FILETHREAD")
            LATEST=$(printf "%s\n" "$FILETHREADCODE" | gawk -F'"' '/addons*.*download/ {print $2}')

            if [ -z "$LATEST" ]; then

                LATEST=$(printf "%s\n" "$FILETHREADCODE" | gawk -F'href="|"' '/attachments/ && (/.zip/ || /.7z/ || /.rar/ || /.pk3/ || /.wad/ || /.lua/ || /.exe/ || /.soc/ || /.ZIP/ || /.7Z/ || /.RAR/ || /.PK3/ || /.WAD/ || /.LUA/ || /.EXE/ || /.SOC/) && NF {print $4}' | gawk -F'/' '{print $2"/"$3}' | gawk '!/^\/$/ {print}' | gawk '!a[$0]++ {print "/"$0}' | head -n1)

            fi

            DOWNLOADHEADER=$(curl -X GET -sLI "https://mb.srb2.org$LATEST" | gawk -F'"' '/filename/ {print $2}')

            if [ -z "$DOWNLOADHEADER" ]; then

                LATESTCODE=$(curl -s "https://mb.srb2.org$LATEST")
                LATEST=$(printf "%s\n" "$LATESTCODE" | gawk -F'a href="|" class' '/version/ {print $2}' | gawk 'NF{print}')

            fi

            $PRINTF "$MESSAGE\n%s\n\e[0m" "Searching for updated $FILENAME. Please wait.."

            for l in $LATEST; do

                REMOTEFILETHREAD=$(printf "%s\n" "$FILETHREADCODE" | gawk -F'"|/' '/og:url/ {print $8}')
                REMOTEFILEURL="https://mb.srb2.org$l"
                REMOTEFILECODE=$(curl -X GET -sLI "$REMOTEFILEURL")
                REMOTEFILESIZE=$(printf "%s\n" "$REMOTEFILECODE" | gawk -F'Content-Length: ' '{IGNORECASE=1} /Content-Length:/ {gsub("\r",""); print $NF}' | tail -n1)

                REMOTEFILENAME=$(printf "%s\n" "$REMOTEFILECODE" | gawk -F'=|;' '{IGNORECASE=1} /Content-Disposition:/ {gsub("\r|\"",""); print $3}')

                if [ "$REMOTEFILESIZE" != "$FILESIZE" ] && [ "$(printf "%s\n" "$REMOTEFILENAME" | gawk -F'.' '{IGNORECASE=1} {gsub("V[0-9]|[0-9]|-|_|'\''| ",""); print toupper($1)}')" = "$(printf "%s\n" "$FILENAME" | gawk -F'.' '{IGNORECASE=1} {gsub("V[0-9]|[0-9]|-|_|'\''| ",""); print toupper($1)}')" ]; then

                    if [ -n "$2" ] && [ "$SRB2DLAUTODIR" != 1 ]; then

                        DIRECTORY="$2"

                    fi

                    $PRINTF "$MESSAGE\n%s\n\e[0m" "Downloading file $REMOTEFILENAME from $REMOTEFILEURL. Please wait.."

                    if [ -n "$DIRECTORY" ]; then

                        if [ -n "$REMOTEFILENAME" ]; then

                            COLUMNS=27 curl -#LC - "$REMOTEFILEURL" -o "$REMOTEFILENAME" --output-dir "$DIRECTORY" 2>&1 &

                        elif [ -z "$REMOTEFILENAME" ]; then

                            COLUMNS=27 curl -#LOC - "$REMOTEFILEURL" --output-dir "$DIRECTORY" 2>&1 &

                        fi

                    else

                        if [ -n "$REMOTEFILENAME" ]; then

                            COLUMNS=27 curl -#LC - "$REMOTEFILEURL" -o "$REMOTEFILENAME" 2>&1 &

                        elif [ -z "$REMOTEFILENAME" ]; then

                            COLUMNS=27 curl -#LOC - "$REMOTEFILEURL" 2>&1 &

                        fi

                    fi

                    FILEURL=$(printf "%s\n" "$FILEURL" | gawk '{gsub("/","\\/"); gsub("?","\\?"); print}')

                    if [ -n "$(gawk '/'$FILEURL'/ && /'$FILESIZE'/ {print}' "$SRB2DLROOT/srb2dl")" ]; then

                        gawk -i inplace '!/'$FILEURL'/ && !/'$FILESIZE'/ {print}' "$SRB2DLROOT/srb2dl"

                    fi

                    $PRINTF "%s\n" "$REMOTEFILETHREAD $REMOTEFILESIZE $REMOTEFILEURL \"$REMOTEFILENAME\" \"$DIRECTORY\"" | gawk 'NF{print}' >> "$SRB2DLROOT/srb2dl"

                fi

            done

        done < "$SRB2DLROOT/srb2dl" | cat

        sort -u "$SRB2DLROOT/srb2dl" > /tmp/srb2dl
        mv /tmp/srb2dl "$SRB2DLROOT/srb2dl"
        $PRINTF "$SUCCESS\n%s\n\e[0m\a" "Upgrading is successful."
        exit

        ;;

esac

###SRB2###

# Make variables to be remembered after rerunning script with "exec $0".
if [ "$CHARACTER" = 1 ]; then

    CHARACTER=1

elif [ "$MAP" = 1 ]; then

    MAP=1

elif [ "$GAMETYPE" = 1 ]; then

    GAMETYPE=1

elif [ "$ASSET" = 1 ]; then

    ASSET=1

elif [ "$LUA" = 1 ]; then

    LUA=1

elif [ "$MODEL" = 1 ]; then

    MODEL=1

elif [ "$PLAYERCOLOR" = 1 ]; then

    PLAYERCOLOR=1

elif [ "$MISC" = 1 ]; then

    MISC=1

elif [ "$SOFTWARE" = 1 ]; then

    SOFTWARE=1

elif [ "$BUILD" = 1 ]; then

    BUILD=1

else

    CHARACTER=0
    MAP=0
    GAMETYPE=0
    ASSET=0
    LUA=0
    MODEL=0
    PLAYERCOLOR=0
    MISC=0
    SOFTWARE=0
    BUILD=0
    FILES=0

    if [ "$SRB2DLAUTODIR" != 1 ] && [ -z "$DIRECTORY" ]; then

        if [ "$1" = "-r" ] || [ "$1" = "--reusable" ]; then

            REUSABLE=1
            shift

        fi

        if [ -z "$1" ]; then

            export DIRECTORYTMP="$(pwd)"

        else

            export DIRECTORYTMP="$1"

        fi

    fi

fi

if [ "$HISTORY" = 1 ]; then

    choosefile

fi

if [ "$CHARACTER" = 0 ] || [ "$MAP" = 0 ] || [ "$GAMETYPE" = 0 ] || [ "$ASSET" = 0 ] || [ "$LUA" = 0 ] || [ "$MODEL" = 0 ] || [ "$PLAYERCOLOR" = 0 ] || [ "$MISC" = 0 ] || [ "$SOFTWARE" = 0 ] || [ "$BUILD" = 0 ]; then

    # Choose SRB2 category.
    while

        clear
        srb2logo
        $PRINTF "$MESSAGE\n%s\n\e[0m" "Please choose category by typing number and then pressing enter. Press enter or ctrl+c to quit."
        for loop in "Characters" "Maps" "Gametypes" "Assets" "Lua" "3D Models" "Player Colors" "Miscellaneous" "Software" "Builds" "$($PRINTF "\033[1m\033[34m%s\033[0m" "Done")"; do $PRINTF "%s\n" "$((i += 1))) $loop"; done

        $PRINTF "$PROMPT%s\e[0m" "#? "
        read -r choose
    do

        unset i

        if [ -n "$choose" ]; then

            case $choose in

                "1")

                    CHARACTER=1
                    break
                    ;;

                "2")

                    MAP=1
                    break
                    ;;

                "3")

                    GAMETYPE=1
                    break
                    ;;

                "4")

                    ASSET=1
                    break
                    ;;

                "5")

                    LUA=1
                    break
                    ;;

                "6")

                    MODEL=1
                    break
                    ;;

                "7")

                    PLAYERCOLOR=1
                    break
                    ;;

                "8")

                    MISC=1
                    break
                    ;;

                "9")

                    SOFTWARE=1
                    break
                    ;;

                "10")

                    BUILD=1
                    break
                    ;;

                "11")

                    dl
                    ;;

            esac

        else

            $PRINTF "$NOTICE\n%s\n\e[0m" "No category has been chosen."
            exit

        fi

    done

fi

# Switching to chosen category and page.
if [ "$CHARACTER" = 1 ]; then

    CHARACTERPAGE=$((CHARACTERPAGE + 1))
    PAGE="$CHARACTERPAGE" CATURL="https://mb.srb2.org/addons/categories/characters.5/?page" choosepage

elif [ "$MAP" = 1 ]; then

    MAPPAGE=$((MAPPAGE + 1))
    PAGE="$MAPPAGE" CATURL="https://mb.srb2.org/addons/categories/maps.4/?page" choosepage

elif [ "$GAMETYPE" = 1 ]; then

    GAMETYPEPAGE=$((GAMETYPEPAGE + 1))
    PAGE="$GAMETYPEPAGE" CATURL="https://mb.srb2.org/addons/categories/custom-gametypes.3/?page" choosepage

elif [ "$ASSET" = 1 ]; then

    ASSETPAGE=$((ASSETPAGE + 1))
    PAGE="$ASSETPAGE" CATURL="https://mb.srb2.org/addons/categories/assets.6/?page" choosepage

elif [ "$LUA" = 1 ]; then

    LUAPAGE=$((LUAPAGE + 1))
    PAGE="$LUAPAGE" CATURL="https://mb.srb2.org/addons/categories/lua.7/?page" choosepage

elif [ "$MODEL" = 1 ]; then

    MODELPAGE=$((MODELPAGE + 1))
    PAGE="$MODELPAGE" CATURL="https://mb.srb2.org/addons/categories/3d-models.21/?page" choosepage

elif [ "$PLAYERCOLOR" = 1 ]; then

    PLAYERCOLORPAGE=$((PLAYERCOLORPAGE + 1))
    PAGE="$PLAYERCOLORPAGE" CATURL="https://mb.srb2.org/addons/categories/player-colors.11/?page" choosepage

elif [ "$MISC" = 1 ]; then

    MISCPAGE=$((MISCPAGE + 1))
    PAGE="$MISCPAGE" CATURL="https://mb.srb2.org/addons/categories/miscellaneous.8/?page" choosepage

elif [ "$SOFTWARE" = 1 ]; then

    SOFTWAREPAGE=$((SOFTWAREPAGE + 1))
    PAGE="$SOFTWAREPAGE" CATURL="https://mb.srb2.org/addons/categories/software.9/?page" choosepage

elif [ "$BUILD" = 1 ]; then

    BUILDPAGE=$((BUILDPAGE + 1))
    PAGE="$BUILDPAGE" CATURL="https://mb.srb2.org/addons/categories/custom-builds.10/?page" choosepage

fi

dlanother
